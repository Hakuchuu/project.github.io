{
	"id": "ddeabe9ca60d69da20398359cd8e499c",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.6.12",
	"solcLongVersion": "0.6.12+commit.27d51765",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/FundMe.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\n// Smart contract that lets anyone deposit ETH into the contract\r\n// Only the owner of the contract can withdraw the ETH\r\npragma solidity >=0.6.6 <0.9.0;\r\n\r\n// Get the latest ETH/USD price from chainlink price feed\r\n\r\n// IMPORTANT: This contract has been updated to use the Goerli testnet\r\n// Please see: https://docs.chain.link/docs/get-the-latest-price/\r\n// For more information\r\n\r\nimport \"@chainlink/contracts/src/v0.6/interfaces/AggregatorV3Interface.sol\";\r\nimport \"@chainlink/contracts/src/v0.6/vendor/SafeMathChainlink.sol\";\r\n\r\ncontract FundMe {\r\n    \r\n    address GOERLI_TESTNET_ETH_USD = 0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e;\r\n    mapping(address => uint) public addrToAmtFunded;\r\n\r\n    function fund() public payable {\r\n        addrToAmtFunded[msg.sender] += msg.value;\r\n    }\r\n\r\n    function getVer() public view returns(uint) {\r\n        AggregatorV3Interface priceFeed = AggregatorV3Interface(GOERLI_TESTNET_ETH_USD);\r\n        return priceFeed.version();\r\n    }\r\n\r\n    function getPrice() public view returns(uint) {\r\n        AggregatorV3Interface priceFeed = AggregatorV3Interface(GOERLI_TESTNET_ETH_USD);\r\n        (,\r\n         int256 answer,\r\n         ,\r\n         ,\r\n        ) = priceFeed.latestRoundData();\r\n        return uint(answer);\r\n    }\r\n}"
			},
			"@chainlink/contracts/src/v0.6/vendor/SafeMathChainlink.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.6.0;\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\n * checks.\n *\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\n * in bugs, because programmers usually assume that an overflow raises an\n * error, which is the standard behavior in high level programming languages.\n * `SafeMath` restores this intuition by reverting the transaction when an\n * operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeMathChainlink {\n  /**\n    * @dev Returns the addition of two unsigned integers, reverting on\n    * overflow.\n    *\n    * Counterpart to Solidity's `+` operator.\n    *\n    * Requirements:\n    * - Addition cannot overflow.\n    */\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\n    uint256 c = a + b;\n    require(c >= a, \"SafeMath: addition overflow\");\n\n    return c;\n  }\n\n  /**\n    * @dev Returns the subtraction of two unsigned integers, reverting on\n    * overflow (when the result is negative).\n    *\n    * Counterpart to Solidity's `-` operator.\n    *\n    * Requirements:\n    * - Subtraction cannot overflow.\n    */\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n    require(b <= a, \"SafeMath: subtraction overflow\");\n    uint256 c = a - b;\n\n    return c;\n  }\n\n  /**\n    * @dev Returns the multiplication of two unsigned integers, reverting on\n    * overflow.\n    *\n    * Counterpart to Solidity's `*` operator.\n    *\n    * Requirements:\n    * - Multiplication cannot overflow.\n    */\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n    // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n    // benefit is lost if 'b' is also tested.\n    // See: https://github.com/OpenZeppelin/openzeppelin-solidity/pull/522\n    if (a == 0) {\n      return 0;\n    }\n\n    uint256 c = a * b;\n    require(c / a == b, \"SafeMath: multiplication overflow\");\n\n    return c;\n  }\n\n  /**\n    * @dev Returns the integer division of two unsigned integers. Reverts on\n    * division by zero. The result is rounded towards zero.\n    *\n    * Counterpart to Solidity's `/` operator. Note: this function uses a\n    * `revert` opcode (which leaves remaining gas untouched) while Solidity\n    * uses an invalid opcode to revert (consuming all remaining gas).\n    *\n    * Requirements:\n    * - The divisor cannot be zero.\n    */\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\n    // Solidity only automatically asserts when dividing by 0\n    require(b > 0, \"SafeMath: division by zero\");\n    uint256 c = a / b;\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n\n    return c;\n  }\n\n  /**\n    * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n    * Reverts when dividing by zero.\n    *\n    * Counterpart to Solidity's `%` operator. This function uses a `revert`\n    * opcode (which leaves remaining gas untouched) while Solidity uses an\n    * invalid opcode to revert (consuming all remaining gas).\n    *\n    * Requirements:\n    * - The divisor cannot be zero.\n    */\n  function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n    require(b != 0, \"SafeMath: modulo by zero\");\n    return a % b;\n  }\n}\n"
			},
			"@chainlink/contracts/src/v0.6/interfaces/AggregatorV3Interface.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.6.0;\n\ninterface AggregatorV3Interface {\n\n  function decimals()\n    external\n    view\n    returns (\n      uint8\n    );\n\n  function description()\n    external\n    view\n    returns (\n      string memory\n    );\n\n  function version()\n    external\n    view\n    returns (\n      uint256\n    );\n\n  function getRoundData(\n    uint80 _roundId\n  )\n    external\n    view\n    returns (\n      uint80 roundId,\n      int256 answer,\n      uint256 startedAt,\n      uint256 updatedAt,\n      uint80 answeredInRound\n    );\n\n  function latestRoundData()\n    external\n    view\n    returns (\n      uint80 roundId,\n      int256 answer,\n      uint256 startedAt,\n      uint256 updatedAt,\n      uint80 answeredInRound\n    );\n\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@chainlink/contracts/src/v0.6/interfaces/AggregatorV3Interface.sol": {
				"AggregatorV3Interface": {
					"abi": [
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "description",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint80",
									"name": "_roundId",
									"type": "uint80"
								}
							],
							"name": "getRoundData",
							"outputs": [
								{
									"internalType": "uint80",
									"name": "roundId",
									"type": "uint80"
								},
								{
									"internalType": "int256",
									"name": "answer",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "startedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "updatedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint80",
									"name": "answeredInRound",
									"type": "uint80"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "latestRoundData",
							"outputs": [
								{
									"internalType": "uint80",
									"name": "roundId",
									"type": "uint80"
								},
								{
									"internalType": "int256",
									"name": "answer",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "startedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "updatedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint80",
									"name": "answeredInRound",
									"type": "uint80"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "version",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"decimals()": "313ce567",
							"description()": "7284e416",
							"getRoundData(uint80)": "9a6fc8f5",
							"latestRoundData()": "feaf968c",
							"version()": "54fd4d50"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"_roundId\",\"type\":\"uint80\"}],\"name\":\"getRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.6/interfaces/AggregatorV3Interface.sol\":\"AggregatorV3Interface\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.6/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0x7171939fd22c628f15406eda07bb4de4f0fda4808790f8334e5b9e1a7ca90f8a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b085262fc0889ef3079b0abbe56aa009550f50c7976a67a21c1617fdda2504ce\",\"dweb:/ipfs/QmdqjNoPJsdgH7CN1x2yoroFQsdNNg16woFasSQXR83sWU\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@chainlink/contracts/src/v0.6/vendor/SafeMathChainlink.sol": {
				"SafeMathChainlink": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@chainlink/contracts/src/v0.6/vendor/SafeMathChainlink.sol\":621:3404  library SafeMathChainlink {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@chainlink/contracts/src/v0.6/vendor/SafeMathChainlink.sol\":621:3404  library SafeMathChainlink {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220280530864f09e2f512236cac3f03995875c7a028e503d834bce126cb9adb11e764736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220280530864f09e2f512236cac3f03995875c7a028e503d834bce126cb9adb11e764736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x28 SDIV ADDRESS DUP7 0x4F MULMOD 0xE2 CREATE2 SLT 0x23 PUSH13 0xAC3F03995875C7A028E503D834 0xBC 0xE1 0x26 0xCB SWAP11 0xDB GT 0xE7 PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "621:2783:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220280530864f09e2f512236cac3f03995875c7a028e503d834bce126cb9adb11e764736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x28 SDIV ADDRESS DUP7 0x4F MULMOD 0xE2 CREATE2 SLT 0x23 PUSH13 0xAC3F03995875C7A028E503D834 0xBC 0xE1 0x26 0xCB SWAP11 0xDB GT 0xE7 PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "621:2783:1:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 621,
									"end": 3404,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 621,
									"end": 3404,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 621,
									"end": 3404,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 621,
									"end": 3404,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 621,
									"end": 3404,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 621,
									"end": 3404,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 621,
									"end": 3404,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 621,
									"end": 3404,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 621,
									"end": 3404,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 621,
									"end": 3404,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 621,
									"end": 3404,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 621,
									"end": 3404,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 621,
									"end": 3404,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 621,
									"end": 3404,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 621,
									"end": 3404,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 621,
									"end": 3404,
									"name": "INVALID",
									"source": 1
								},
								{
									"begin": 621,
									"end": 3404,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 621,
									"end": 3404,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 621,
									"end": 3404,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 621,
									"end": 3404,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 621,
									"end": 3404,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 621,
									"end": 3404,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 621,
									"end": 3404,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 621,
									"end": 3404,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 621,
									"end": 3404,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 621,
									"end": 3404,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 621,
									"end": 3404,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220280530864f09e2f512236cac3f03995875c7a028e503d834bce126cb9adb11e764736f6c634300060c0033",
									".code": [
										{
											"begin": 621,
											"end": 3404,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 621,
											"end": 3404,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 621,
											"end": 3404,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 621,
											"end": 3404,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 621,
											"end": 3404,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 621,
											"end": 3404,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 621,
											"end": 3404,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 621,
											"end": 3404,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 621,
											"end": 3404,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.6/vendor/SafeMathChainlink.sol\":\"SafeMathChainlink\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.6/vendor/SafeMathChainlink.sol\":{\"keccak256\":\"0x105f5e9491f3d0bbdd4f1c7627eb839d69b944bfd803028a01cc083597692c1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec45a2748a024a947a921183d4102d5e206808588501d85ddc4f5668a009bc73\",\"dweb:/ipfs/QmRNAMpq7LdWFnJ7wWKGbUuAcURaGSS42PMxtQ4vjrHmp9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/FundMe.sol": {
				"FundMe": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "addrToAmtFunded",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "fund",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getVer",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/FundMe.sol\":569:1301  contract FundMe {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/FundMe.sol\":631:673  0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e */\n  0xd4a33860578de61dbabdc8bfdb98fd742fa7028e\n    /* \"contracts/FundMe.sol\":598:673  address GOERLI_TESTNET_ETH_USD = 0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e */\n  0x00\n  dup1\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/FundMe.sol\":569:1301  contract FundMe {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/FundMe.sol\":569:1301  contract FundMe {\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x0504b2cd\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x8793ad55\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x98d5fdca\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xb60d4288\n      eq\n      tag_5\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/FundMe.sol\":680:727  mapping(address => uint) public addrToAmtFunded */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_6\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_6:\n      pop\n      tag_7\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_8\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_8:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_9\n      jump\t// in\n    tag_7:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/FundMe.sol\":834:1013  function getVer() public view returns(uint) {\r... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_10:\n      pop\n      tag_11\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/FundMe.sol\":1021:1298  function getPrice() public view returns(uint) {\r... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_13:\n      pop\n      tag_14\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/FundMe.sol\":736:826  function fund() public payable {\r... */\n    tag_5:\n      tag_16\n      tag_17\n      jump\t// in\n    tag_16:\n      stop\n        /* \"contracts/FundMe.sol\":680:727  mapping(address => uint) public addrToAmtFunded */\n    tag_9:\n      mstore(0x20, 0x01)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/FundMe.sol\":834:1013  function getVer() public view returns(uint) {\r... */\n    tag_12:\n        /* \"contracts/FundMe.sol\":872:876  uint */\n      0x00\n        /* \"contracts/FundMe.sol\":889:920  AggregatorV3Interface priceFeed */\n      dup1\n        /* \"contracts/FundMe.sol\":945:967  GOERLI_TESTNET_ETH_USD */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/FundMe.sol\":889:968  AggregatorV3Interface priceFeed = AggregatorV3Interface(GOERLI_TESTNET_ETH_USD) */\n      swap1\n      pop\n        /* \"contracts/FundMe.sol\":986:995  priceFeed */\n      dup1\n        /* \"contracts/FundMe.sol\":986:1003  priceFeed.version */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x54fd4d50\n        /* \"contracts/FundMe.sol\":986:1005  priceFeed.version() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_21\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_21:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"contracts/FundMe.sol\":979:1005  return priceFeed.version() */\n      swap2\n      pop\n      pop\n        /* \"contracts/FundMe.sol\":834:1013  function getVer() public view returns(uint) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/FundMe.sol\":1021:1298  function getPrice() public view returns(uint) {\r... */\n    tag_15:\n        /* \"contracts/FundMe.sol\":1061:1065  uint */\n      0x00\n        /* \"contracts/FundMe.sol\":1078:1109  AggregatorV3Interface priceFeed */\n      dup1\n        /* \"contracts/FundMe.sol\":1134:1156  GOERLI_TESTNET_ETH_USD */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/FundMe.sol\":1078:1157  AggregatorV3Interface priceFeed = AggregatorV3Interface(GOERLI_TESTNET_ETH_USD) */\n      swap1\n      pop\n        /* \"contracts/FundMe.sol\":1181:1194  int256 answer */\n      0x00\n        /* \"contracts/FundMe.sol\":1233:1242  priceFeed */\n      dup2\n        /* \"contracts/FundMe.sol\":1233:1258  priceFeed.latestRoundData */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xfeaf968c\n        /* \"contracts/FundMe.sol\":1233:1260  priceFeed.latestRoundData() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0xa0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_24\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_24:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_26\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_26:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0xa0\n      dup2\n      lt\n      iszero\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"contracts/FundMe.sol\":1168:1260  (,\r... */\n      pop\n      pop\n      pop\n      swap2\n      pop\n      pop\n        /* \"contracts/FundMe.sol\":1283:1289  answer */\n      dup1\n        /* \"contracts/FundMe.sol\":1271:1290  return uint(answer) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/FundMe.sol\":1021:1298  function getPrice() public view returns(uint) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/FundMe.sol\":736:826  function fund() public payable {\r... */\n    tag_17:\n        /* \"contracts/FundMe.sol\":809:818  msg.value */\n      callvalue\n        /* \"contracts/FundMe.sol\":778:793  addrToAmtFunded */\n      0x01\n        /* \"contracts/FundMe.sol\":778:805  addrToAmtFunded[msg.sender] */\n      0x00\n        /* \"contracts/FundMe.sol\":794:804  msg.sender */\n      caller\n        /* \"contracts/FundMe.sol\":778:805  addrToAmtFunded[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/FundMe.sol\":778:818  addrToAmtFunded[msg.sender] += msg.value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/FundMe.sol\":736:826  function fund() public payable {\r... */\n      jump\t// out\n\n    auxdata: 0xa264697066735822122017de894aac39d259171ac9e1277f73813eac04eddfbd00ddc62504e556eb0a6e64736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405273d4a33860578de61dbabdc8bfdb98fd742fa7028e6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034801561006457600080fd5b50610332806100746000396000f3fe60806040526004361061003f5760003560e01c80630504b2cd146100445780638793ad55146100a957806398d5fdca146100d4578063b60d4288146100ff575b600080fd5b34801561005057600080fd5b506100936004803603602081101561006757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610109565b6040518082815260200191505060405180910390f35b3480156100b557600080fd5b506100be610121565b6040518082815260200191505060405180910390f35b3480156100e057600080fd5b506100e96101ce565b6040518082815260200191505060405180910390f35b6101076102ad565b005b60016020528060005260406000206000915090505481565b60008060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b815260040160206040518083038186803b15801561018d57600080fd5b505afa1580156101a1573d6000803e3d6000fd5b505050506040513d60208110156101b757600080fd5b810190808051906020019092919050505091505090565b60008060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008173ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561023c57600080fd5b505afa158015610250573d6000803e3d6000fd5b505050506040513d60a081101561026657600080fd5b810190808051906020019092919080519060200190929190805190602001909291908051906020019092919080519060200190929190505050505050915050809250505090565b34600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254019250508190555056fea264697066735822122017de894aac39d259171ac9e1277f73813eac04eddfbd00ddc62504e556eb0a6e64736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH20 0xD4A33860578DE61DBABDC8BFDB98FD742FA7028E PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH2 0x64 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x332 DUP1 PUSH2 0x74 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x504B2CD EQ PUSH2 0x44 JUMPI DUP1 PUSH4 0x8793AD55 EQ PUSH2 0xA9 JUMPI DUP1 PUSH4 0x98D5FDCA EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0xB60D4288 EQ PUSH2 0xFF JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x93 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x67 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x109 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xBE PUSH2 0x121 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE9 PUSH2 0x1CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x107 PUSH2 0x2AD JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x54FD4D50 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1A1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x23C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x250 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x266 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP POP POP POP SWAP2 POP POP DUP1 SWAP3 POP POP POP SWAP1 JUMP JUMPDEST CALLVALUE PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 OR 0xDE DUP10 0x4A 0xAC CODECOPY 0xD2 MSIZE OR BYTE 0xC9 0xE1 0x27 PUSH32 0x73813EAC04EDDFBD00DDC62504E556EB0A6E64736F6C634300060C0033000000 ",
							"sourceMap": "569:732:2:-:0;;;631:42;598:75;;;;;;;;;;;;;;;;;;;;569:732;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040526004361061003f5760003560e01c80630504b2cd146100445780638793ad55146100a957806398d5fdca146100d4578063b60d4288146100ff575b600080fd5b34801561005057600080fd5b506100936004803603602081101561006757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610109565b6040518082815260200191505060405180910390f35b3480156100b557600080fd5b506100be610121565b6040518082815260200191505060405180910390f35b3480156100e057600080fd5b506100e96101ce565b6040518082815260200191505060405180910390f35b6101076102ad565b005b60016020528060005260406000206000915090505481565b60008060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b815260040160206040518083038186803b15801561018d57600080fd5b505afa1580156101a1573d6000803e3d6000fd5b505050506040513d60208110156101b757600080fd5b810190808051906020019092919050505091505090565b60008060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008173ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561023c57600080fd5b505afa158015610250573d6000803e3d6000fd5b505050506040513d60a081101561026657600080fd5b810190808051906020019092919080519060200190929190805190602001909291908051906020019092919080519060200190929190505050505050915050809250505090565b34600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254019250508190555056fea264697066735822122017de894aac39d259171ac9e1277f73813eac04eddfbd00ddc62504e556eb0a6e64736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x504B2CD EQ PUSH2 0x44 JUMPI DUP1 PUSH4 0x8793AD55 EQ PUSH2 0xA9 JUMPI DUP1 PUSH4 0x98D5FDCA EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0xB60D4288 EQ PUSH2 0xFF JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x93 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x67 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x109 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xBE PUSH2 0x121 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE9 PUSH2 0x1CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x107 PUSH2 0x2AD JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x54FD4D50 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1A1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x23C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x250 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x266 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP POP POP POP SWAP2 POP POP DUP1 SWAP3 POP POP POP SWAP1 JUMP JUMPDEST CALLVALUE PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 OR 0xDE DUP10 0x4A 0xAC CODECOPY 0xD2 MSIZE OR BYTE 0xC9 0xE1 0x27 PUSH32 0x73813EAC04EDDFBD00DDC62504E556EB0A6E64736F6C634300060C0033000000 ",
							"sourceMap": "569:732:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;680:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;834:179;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1021:277;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;736:90;;;:::i;:::-;;680:47;;;;;;;;;;;;;;;;;:::o;834:179::-;872:4;889:31;945:22;;;;;;;;;;889:79;;986:9;:17;;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;979:26;;;834:179;:::o;1021:277::-;1061:4;1078:31;1134:22;;;;;;;;;;1078:79;;1181:13;1233:9;:25;;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1168:92;;;;;;1283:6;1271:19;;;;1021:277;:::o;736:90::-;809:9;778:15;:27;794:10;778:27;;;;;;;;;;;;;;;;:40;;;;;;;;;;;736:90::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "163600",
								"executionCost": "21075",
								"totalCost": "184675"
							},
							"external": {
								"addrToAmtFunded(address)": "1147",
								"fund()": "21085",
								"getPrice()": "infinite",
								"getVer()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 569,
									"end": 1301,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 569,
									"end": 1301,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 569,
									"end": 1301,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 631,
									"end": 673,
									"name": "PUSH",
									"source": 2,
									"value": "D4A33860578DE61DBABDC8BFDB98FD742FA7028E"
								},
								{
									"begin": 598,
									"end": 673,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 598,
									"end": 673,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 598,
									"end": 673,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 598,
									"end": 673,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 598,
									"end": 673,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 598,
									"end": 673,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 598,
									"end": 673,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 598,
									"end": 673,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 598,
									"end": 673,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 598,
									"end": 673,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 598,
									"end": 673,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 598,
									"end": 673,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 598,
									"end": 673,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 598,
									"end": 673,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 598,
									"end": 673,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 598,
									"end": 673,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 598,
									"end": 673,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 598,
									"end": 673,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 598,
									"end": 673,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 598,
									"end": 673,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 569,
									"end": 1301,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 569,
									"end": 1301,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 569,
									"end": 1301,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 569,
									"end": 1301,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 569,
									"end": 1301,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 569,
									"end": 1301,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 569,
									"end": 1301,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 569,
									"end": 1301,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 569,
									"end": 1301,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 569,
									"end": 1301,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 569,
									"end": 1301,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 569,
									"end": 1301,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 569,
									"end": 1301,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 569,
									"end": 1301,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 569,
									"end": 1301,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 569,
									"end": 1301,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 569,
									"end": 1301,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 569,
									"end": 1301,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122017de894aac39d259171ac9e1277f73813eac04eddfbd00ddc62504e556eb0a6e64736f6c634300060c0033",
									".code": [
										{
											"begin": 569,
											"end": 1301,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 569,
											"end": 1301,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 569,
											"end": 1301,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 569,
											"end": 1301,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 569,
											"end": 1301,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 569,
											"end": 1301,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 569,
											"end": 1301,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 569,
											"end": 1301,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 569,
											"end": 1301,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 569,
											"end": 1301,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 569,
											"end": 1301,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 569,
											"end": 1301,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 569,
											"end": 1301,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 569,
											"end": 1301,
											"name": "PUSH",
											"source": 2,
											"value": "504B2CD"
										},
										{
											"begin": 569,
											"end": 1301,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 569,
											"end": 1301,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 569,
											"end": 1301,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 569,
											"end": 1301,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 569,
											"end": 1301,
											"name": "PUSH",
											"source": 2,
											"value": "8793AD55"
										},
										{
											"begin": 569,
											"end": 1301,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 569,
											"end": 1301,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 569,
											"end": 1301,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 569,
											"end": 1301,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 569,
											"end": 1301,
											"name": "PUSH",
											"source": 2,
											"value": "98D5FDCA"
										},
										{
											"begin": 569,
											"end": 1301,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 569,
											"end": 1301,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 569,
											"end": 1301,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 569,
											"end": 1301,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 569,
											"end": 1301,
											"name": "PUSH",
											"source": 2,
											"value": "B60D4288"
										},
										{
											"begin": 569,
											"end": 1301,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 569,
											"end": 1301,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 569,
											"end": 1301,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 569,
											"end": 1301,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 569,
											"end": 1301,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 569,
											"end": 1301,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 569,
											"end": 1301,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 569,
											"end": 1301,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 680,
											"end": 727,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 680,
											"end": 727,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 680,
											"end": 727,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 680,
											"end": 727,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 680,
											"end": 727,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 680,
											"end": 727,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 680,
											"end": 727,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 680,
											"end": 727,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 680,
											"end": 727,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 680,
											"end": 727,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 680,
											"end": 727,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 680,
											"end": 727,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 680,
											"end": 727,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 680,
											"end": 727,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 680,
											"end": 727,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 727,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 680,
											"end": 727,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 680,
											"end": 727,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 680,
											"end": 727,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 727,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 680,
											"end": 727,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 680,
											"end": 727,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 680,
											"end": 727,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 680,
											"end": 727,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 680,
											"end": 727,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 680,
											"end": 727,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 680,
											"end": 727,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 680,
											"end": 727,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 680,
											"end": 727,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 680,
											"end": 727,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 680,
											"end": 727,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 680,
											"end": 727,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 680,
											"end": 727,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 680,
											"end": 727,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 680,
											"end": 727,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 680,
											"end": 727,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 680,
											"end": 727,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 680,
											"end": 727,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 680,
											"end": 727,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 727,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 680,
											"end": 727,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 680,
											"end": 727,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 680,
											"end": 727,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 680,
											"end": 727,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 680,
											"end": 727,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 680,
											"end": 727,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 680,
											"end": 727,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 680,
											"end": 727,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 680,
											"end": 727,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 680,
											"end": 727,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 680,
											"end": 727,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 680,
											"end": 727,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 727,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 680,
											"end": 727,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 680,
											"end": 727,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 680,
											"end": 727,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 680,
											"end": 727,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 680,
											"end": 727,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 727,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 680,
											"end": 727,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 680,
											"end": 727,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 680,
											"end": 727,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 680,
											"end": 727,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 727,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 680,
											"end": 727,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 680,
											"end": 727,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 680,
											"end": 727,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 680,
											"end": 727,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 680,
											"end": 727,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 834,
											"end": 1013,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 834,
											"end": 1013,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 834,
											"end": 1013,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 834,
											"end": 1013,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 834,
											"end": 1013,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 834,
											"end": 1013,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 834,
											"end": 1013,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 834,
											"end": 1013,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 834,
											"end": 1013,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 834,
											"end": 1013,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 834,
											"end": 1013,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 834,
											"end": 1013,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 834,
											"end": 1013,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 834,
											"end": 1013,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 834,
											"end": 1013,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 834,
											"end": 1013,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 834,
											"end": 1013,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 834,
											"end": 1013,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 834,
											"end": 1013,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 834,
											"end": 1013,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 834,
											"end": 1013,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 834,
											"end": 1013,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 834,
											"end": 1013,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 834,
											"end": 1013,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 834,
											"end": 1013,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 834,
											"end": 1013,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 834,
											"end": 1013,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 834,
											"end": 1013,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 834,
											"end": 1013,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 834,
											"end": 1013,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 834,
											"end": 1013,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 834,
											"end": 1013,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 834,
											"end": 1013,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 834,
											"end": 1013,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 834,
											"end": 1013,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 834,
											"end": 1013,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1021,
											"end": 1298,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1021,
											"end": 1298,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1021,
											"end": 1298,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1021,
											"end": 1298,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1021,
											"end": 1298,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1021,
											"end": 1298,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 1021,
											"end": 1298,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1021,
											"end": 1298,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1021,
											"end": 1298,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1021,
											"end": 1298,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1021,
											"end": 1298,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 1021,
											"end": 1298,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1021,
											"end": 1298,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1021,
											"end": 1298,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1021,
											"end": 1298,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 1021,
											"end": 1298,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1021,
											"end": 1298,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1021,
											"end": 1298,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1021,
											"end": 1298,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1021,
											"end": 1298,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1021,
											"end": 1298,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1021,
											"end": 1298,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1021,
											"end": 1298,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1021,
											"end": 1298,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1021,
											"end": 1298,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1021,
											"end": 1298,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1021,
											"end": 1298,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1021,
											"end": 1298,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1021,
											"end": 1298,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1021,
											"end": 1298,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1021,
											"end": 1298,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1021,
											"end": 1298,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1021,
											"end": 1298,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1021,
											"end": 1298,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1021,
											"end": 1298,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1021,
											"end": 1298,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 736,
											"end": 826,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 736,
											"end": 826,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 736,
											"end": 826,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 736,
											"end": 826,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 736,
											"end": 826,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 736,
											"end": 826,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 736,
											"end": 826,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 736,
											"end": 826,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 680,
											"end": 727,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 680,
											"end": 727,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 680,
											"end": 727,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 680,
											"end": 727,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 727,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 680,
											"end": 727,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 680,
											"end": 727,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 680,
											"end": 727,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 680,
											"end": 727,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 727,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 680,
											"end": 727,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 680,
											"end": 727,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 680,
											"end": 727,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 680,
											"end": 727,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 680,
											"end": 727,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 680,
											"end": 727,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 680,
											"end": 727,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 680,
											"end": 727,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 680,
											"end": 727,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 834,
											"end": 1013,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 834,
											"end": 1013,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 872,
											"end": 876,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 889,
											"end": 920,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 945,
											"end": 967,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 945,
											"end": 967,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 945,
											"end": 967,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 945,
											"end": 967,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 945,
											"end": 967,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 945,
											"end": 967,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 945,
											"end": 967,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 945,
											"end": 967,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 945,
											"end": 967,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 945,
											"end": 967,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 889,
											"end": 968,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 889,
											"end": 968,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 986,
											"end": 995,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 986,
											"end": 1003,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 986,
											"end": 1003,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 986,
											"end": 1003,
											"name": "PUSH",
											"source": 2,
											"value": "54FD4D50"
										},
										{
											"begin": 986,
											"end": 1005,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 986,
											"end": 1005,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 986,
											"end": 1005,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 986,
											"end": 1005,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 986,
											"end": 1005,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 986,
											"end": 1005,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 986,
											"end": 1005,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 986,
											"end": 1005,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 986,
											"end": 1005,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 986,
											"end": 1005,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 986,
											"end": 1005,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 986,
											"end": 1005,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 986,
											"end": 1005,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 986,
											"end": 1005,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 986,
											"end": 1005,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 986,
											"end": 1005,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 986,
											"end": 1005,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 986,
											"end": 1005,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 986,
											"end": 1005,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 986,
											"end": 1005,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 986,
											"end": 1005,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 986,
											"end": 1005,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 986,
											"end": 1005,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 986,
											"end": 1005,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 986,
											"end": 1005,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 986,
											"end": 1005,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 986,
											"end": 1005,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 986,
											"end": 1005,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 986,
											"end": 1005,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 986,
											"end": 1005,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 986,
											"end": 1005,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 986,
											"end": 1005,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 986,
											"end": 1005,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 986,
											"end": 1005,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 986,
											"end": 1005,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 986,
											"end": 1005,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 986,
											"end": 1005,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 986,
											"end": 1005,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 986,
											"end": 1005,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 986,
											"end": 1005,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 986,
											"end": 1005,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 986,
											"end": 1005,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 986,
											"end": 1005,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 986,
											"end": 1005,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 986,
											"end": 1005,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 986,
											"end": 1005,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 986,
											"end": 1005,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 986,
											"end": 1005,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 986,
											"end": 1005,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 986,
											"end": 1005,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 986,
											"end": 1005,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 986,
											"end": 1005,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 986,
											"end": 1005,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 986,
											"end": 1005,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 986,
											"end": 1005,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 986,
											"end": 1005,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 986,
											"end": 1005,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 986,
											"end": 1005,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 986,
											"end": 1005,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 986,
											"end": 1005,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 986,
											"end": 1005,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 986,
											"end": 1005,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 986,
											"end": 1005,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 986,
											"end": 1005,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 986,
											"end": 1005,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 986,
											"end": 1005,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 986,
											"end": 1005,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 986,
											"end": 1005,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 986,
											"end": 1005,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 986,
											"end": 1005,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 986,
											"end": 1005,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 986,
											"end": 1005,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 986,
											"end": 1005,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 986,
											"end": 1005,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 986,
											"end": 1005,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 986,
											"end": 1005,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 986,
											"end": 1005,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 986,
											"end": 1005,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 986,
											"end": 1005,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 986,
											"end": 1005,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 986,
											"end": 1005,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 986,
											"end": 1005,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 979,
											"end": 1005,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 979,
											"end": 1005,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 979,
											"end": 1005,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 834,
											"end": 1013,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 834,
											"end": 1013,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1021,
											"end": 1298,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 1021,
											"end": 1298,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1061,
											"end": 1065,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1078,
											"end": 1109,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1134,
											"end": 1156,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1134,
											"end": 1156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1134,
											"end": 1156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1134,
											"end": 1156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1134,
											"end": 1156,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1134,
											"end": 1156,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1134,
											"end": 1156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1134,
											"end": 1156,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1134,
											"end": 1156,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1134,
											"end": 1156,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1078,
											"end": 1157,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1078,
											"end": 1157,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1181,
											"end": 1194,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1233,
											"end": 1242,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1258,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1233,
											"end": 1258,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1258,
											"name": "PUSH",
											"source": 2,
											"value": "FEAF968C"
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "PUSH",
											"source": 2,
											"value": "A0"
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "PUSH",
											"source": 2,
											"value": "A0"
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1168,
											"end": 1260,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1168,
											"end": 1260,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1168,
											"end": 1260,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1168,
											"end": 1260,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1168,
											"end": 1260,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1168,
											"end": 1260,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1289,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1290,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1290,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1290,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1290,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1021,
											"end": 1298,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1021,
											"end": 1298,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 736,
											"end": 826,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 736,
											"end": 826,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 809,
											"end": 818,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 778,
											"end": 793,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 778,
											"end": 805,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 794,
											"end": 804,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 778,
											"end": 805,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 778,
											"end": 805,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 778,
											"end": 805,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 778,
											"end": 805,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 778,
											"end": 805,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 778,
											"end": 805,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 778,
											"end": 805,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 778,
											"end": 805,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 778,
											"end": 805,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 778,
											"end": 805,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 778,
											"end": 805,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 778,
											"end": 805,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 778,
											"end": 805,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 778,
											"end": 805,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 778,
											"end": 805,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 778,
											"end": 805,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 778,
											"end": 818,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 778,
											"end": 818,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 778,
											"end": 818,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 778,
											"end": 818,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 778,
											"end": 818,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 778,
											"end": 818,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 778,
											"end": 818,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 778,
											"end": 818,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 778,
											"end": 818,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 778,
											"end": 818,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 778,
											"end": 818,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 736,
											"end": 826,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"addrToAmtFunded(address)": "0504b2cd",
							"fund()": "b60d4288",
							"getPrice()": "98d5fdca",
							"getVer()": "8793ad55"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addrToAmtFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVer\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.6/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0x7171939fd22c628f15406eda07bb4de4f0fda4808790f8334e5b9e1a7ca90f8a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b085262fc0889ef3079b0abbe56aa009550f50c7976a67a21c1617fdda2504ce\",\"dweb:/ipfs/QmdqjNoPJsdgH7CN1x2yoroFQsdNNg16woFasSQXR83sWU\"]},\"@chainlink/contracts/src/v0.6/vendor/SafeMathChainlink.sol\":{\"keccak256\":\"0x105f5e9491f3d0bbdd4f1c7627eb839d69b944bfd803028a01cc083597692c1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec45a2748a024a947a921183d4102d5e206808588501d85ddc4f5668a009bc73\",\"dweb:/ipfs/QmRNAMpq7LdWFnJ7wWKGbUuAcURaGSS42PMxtQ4vjrHmp9\"]},\"contracts/FundMe.sol\":{\"keccak256\":\"0x7edc19b707634c39a94c3f05a6d18f85173315e71908a4205142c8ead5602b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c06742c53a711866600ca4c01c44e6cd8f5c086f30ab837c41e0e95ffade38c4\",\"dweb:/ipfs/QmTcKavAtxUGFJoNYHNFpZGjQgvgwJnjQ2EjMqnBvZmzy5\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 191,
								"contract": "contracts/FundMe.sol:FundMe",
								"label": "GOERLI_TESTNET_ETH_USD",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 195,
								"contract": "contracts/FundMe.sol:FundMe",
								"label": "addrToAmtFunded",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@chainlink/contracts/src/v0.6/interfaces/AggregatorV3Interface.sol": {
				"ast": {
					"absolutePath": "@chainlink/contracts/src/v0.6/interfaces/AggregatorV3Interface.sol",
					"exportedSymbols": {
						"AggregatorV3Interface": [
							45
						]
					},
					"id": 46,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 45,
							"linearizedBaseContracts": [
								45
							],
							"name": "AggregatorV3Interface",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": null,
									"functionSelector": "313ce567",
									"id": 6,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "111:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 6,
												"src": "156:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 3,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "156:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "148:19:0"
									},
									"scope": 45,
									"src": "94:74:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "7284e416",
									"id": 11,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "description",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "192:2:0"
									},
									"returnParameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 11,
												"src": "237:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 8,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "237:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "229:27:0"
									},
									"scope": 45,
									"src": "172:85:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "54fd4d50",
									"id": 16,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "version",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "277:2:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 16,
												"src": "322:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 13,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "322:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "314:21:0"
									},
									"scope": 45,
									"src": "261:75:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "9a6fc8f5",
									"id": 31,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoundData",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 18,
												"mutability": "mutable",
												"name": "_roundId",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 31,
												"src": "367:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 17,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "367:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "361:25:0"
									},
									"returnParameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "roundId",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 31,
												"src": "429:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 20,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "429:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "answer",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 31,
												"src": "451:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 22,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "451:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 25,
												"mutability": "mutable",
												"name": "startedAt",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 31,
												"src": "472:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 24,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "472:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "updatedAt",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 31,
												"src": "497:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 26,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "497:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "answeredInRound",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 31,
												"src": "522:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 28,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "522:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "421:129:0"
									},
									"scope": 45,
									"src": "340:211:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "feaf968c",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "latestRoundData",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "579:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "roundId",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 44,
												"src": "624:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 33,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "624:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 36,
												"mutability": "mutable",
												"name": "answer",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 44,
												"src": "646:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 35,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "646:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "startedAt",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 44,
												"src": "667:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 37,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "667:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 40,
												"mutability": "mutable",
												"name": "updatedAt",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 44,
												"src": "692:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 39,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "692:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "answeredInRound",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 44,
												"src": "717:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 41,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "717:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "616:129:0"
									},
									"scope": 45,
									"src": "555:191:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 46,
							"src": "57:692:0"
						}
					],
					"src": "32:718:0"
				},
				"id": 0
			},
			"@chainlink/contracts/src/v0.6/vendor/SafeMathChainlink.sol": {
				"ast": {
					"absolutePath": "@chainlink/contracts/src/v0.6/vendor/SafeMathChainlink.sol",
					"exportedSymbols": {
						"SafeMathChainlink": [
							184
						]
					},
					"id": 185,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 47,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 48,
								"nodeType": "StructuredDocumentation",
								"src": "57:563:1",
								"text": " @dev Wrappers over Solidity's arithmetic operations with added overflow\n checks.\n Arithmetic operations in Solidity wrap on overflow. This can easily result\n in bugs, because programmers usually assume that an overflow raises an\n error, which is the standard behavior in high level programming languages.\n `SafeMath` restores this intuition by reverting the transaction when an\n operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."
							},
							"fullyImplemented": true,
							"id": 184,
							"linearizedBaseContracts": [
								184
							],
							"name": "SafeMathChainlink",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 73,
										"nodeType": "Block",
										"src": "930:95:1",
										"statements": [
											{
												"assignments": [
													59
												],
												"declarations": [
													{
														"constant": false,
														"id": 59,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 73,
														"src": "936:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 58,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "936:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 63,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 62,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 60,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 51,
														"src": "948:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 61,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 53,
														"src": "952:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "948:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "936:17:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 67,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 65,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 59,
																"src": "967:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 66,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 51,
																"src": "972:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "967:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 68,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "975:29:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 64,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "959:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 69,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "959:46:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 70,
												"nodeType": "ExpressionStatement",
												"src": "959:46:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 71,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 59,
													"src": "1019:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 57,
												"id": 72,
												"nodeType": "Return",
												"src": "1012:8:1"
											}
										]
									},
									"documentation": {
										"id": 49,
										"nodeType": "StructuredDocumentation",
										"src": "651:209:1",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 74,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 74,
												"src": "876:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 50,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "876:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 74,
												"src": "887:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 52,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "887:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "875:22:1"
									},
									"returnParameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 74,
												"src": "921:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 55,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "921:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "920:9:1"
									},
									"scope": 184,
									"src": "863:162:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 99,
										"nodeType": "Block",
										"src": "1344:98:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 87,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 85,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 79,
																"src": "1358:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 86,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 77,
																"src": "1363:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1358:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 88,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1366:32:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 84,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1350:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 89,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1350:49:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 90,
												"nodeType": "ExpressionStatement",
												"src": "1350:49:1"
											},
											{
												"assignments": [
													92
												],
												"declarations": [
													{
														"constant": false,
														"id": 92,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 99,
														"src": "1405:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 91,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1405:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 96,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 93,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 77,
														"src": "1417:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 94,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 79,
														"src": "1421:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1417:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1405:17:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 97,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 92,
													"src": "1436:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 83,
												"id": 98,
												"nodeType": "Return",
												"src": "1429:8:1"
											}
										]
									},
									"documentation": {
										"id": 75,
										"nodeType": "StructuredDocumentation",
										"src": "1029:245:1",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 100,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 77,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 100,
												"src": "1290:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 76,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1290:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 79,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 100,
												"src": "1301:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 78,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1301:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1289:22:1"
									},
									"returnParameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 82,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 100,
												"src": "1335:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 81,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1335:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1334:9:1"
									},
									"scope": 184,
									"src": "1277:165:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 134,
										"nodeType": "Block",
										"src": "1737:351:1",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 110,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "1952:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 111,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1957:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1952:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 116,
												"nodeType": "IfStatement",
												"src": "1948:35:1",
												"trueBody": {
													"id": 115,
													"nodeType": "Block",
													"src": "1960:23:1",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 113,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1975:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 109,
															"id": 114,
															"nodeType": "Return",
															"src": "1968:8:1"
														}
													]
												}
											},
											{
												"assignments": [
													118
												],
												"declarations": [
													{
														"constant": false,
														"id": 118,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 134,
														"src": "1989:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 117,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1989:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 122,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 119,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "2001:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 120,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 105,
														"src": "2005:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2001:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1989:17:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 128,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 126,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 124,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 118,
																	"src": "2020:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 125,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 103,
																	"src": "2024:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2020:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 127,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 105,
																"src": "2029:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2020:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 129,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2032:35:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 123,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2012:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2012:56:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 131,
												"nodeType": "ExpressionStatement",
												"src": "2012:56:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 132,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 118,
													"src": "2082:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 109,
												"id": 133,
												"nodeType": "Return",
												"src": "2075:8:1"
											}
										]
									},
									"documentation": {
										"id": 101,
										"nodeType": "StructuredDocumentation",
										"src": "1446:221:1",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 135,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 103,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 135,
												"src": "1683:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 102,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1683:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 105,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 135,
												"src": "1694:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 104,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1694:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1682:22:1"
									},
									"returnParameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 108,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 135,
												"src": "1728:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 107,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1728:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1727:9:1"
									},
									"scope": 184,
									"src": "1670:418:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 160,
										"nodeType": "Block",
										"src": "2596:237:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 148,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 146,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 140,
																"src": "2672:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 147,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2676:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2672:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 149,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2679:28:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 145,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2664:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2664:44:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 151,
												"nodeType": "ExpressionStatement",
												"src": "2664:44:1"
											},
											{
												"assignments": [
													153
												],
												"declarations": [
													{
														"constant": false,
														"id": 153,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 160,
														"src": "2714:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 152,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2714:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 157,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 154,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 138,
														"src": "2726:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 155,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 140,
														"src": "2730:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2726:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2714:17:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 158,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 153,
													"src": "2827:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 144,
												"id": 159,
												"nodeType": "Return",
												"src": "2820:8:1"
											}
										]
									},
									"documentation": {
										"id": 136,
										"nodeType": "StructuredDocumentation",
										"src": "2092:434:1",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 161,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 161,
												"src": "2542:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 137,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2542:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 161,
												"src": "2553:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 139,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2553:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2541:22:1"
									},
									"returnParameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 161,
												"src": "2587:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 142,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2587:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2586:9:1"
									},
									"scope": 184,
									"src": "2529:304:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 182,
										"nodeType": "Block",
										"src": "3330:72:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 174,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 172,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 166,
																"src": "3344:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 173,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3349:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3344:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 175,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3352:26:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 171,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3336:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3336:43:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 177,
												"nodeType": "ExpressionStatement",
												"src": "3336:43:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 180,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 178,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 164,
														"src": "3392:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 179,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 166,
														"src": "3396:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3392:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 170,
												"id": 181,
												"nodeType": "Return",
												"src": "3385:12:1"
											}
										]
									},
									"documentation": {
										"id": 162,
										"nodeType": "StructuredDocumentation",
										"src": "2837:423:1",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 183,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 164,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 183,
												"src": "3276:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 163,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3276:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 183,
												"src": "3287:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 165,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3287:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3275:22:1"
									},
									"returnParameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 183,
												"src": "3321:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 168,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3321:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3320:9:1"
									},
									"scope": 184,
									"src": "3263:139:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 185,
							"src": "621:2783:1"
						}
					],
					"src": "32:3373:1"
				},
				"id": 1
			},
			"contracts/FundMe.sol": {
				"ast": {
					"absolutePath": "contracts/FundMe.sol",
					"exportedSymbols": {
						"FundMe": [
							247
						]
					},
					"id": 248,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 186,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".6",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "157:31:2"
						},
						{
							"absolutePath": "@chainlink/contracts/src/v0.6/interfaces/AggregatorV3Interface.sol",
							"file": "@chainlink/contracts/src/v0.6/interfaces/AggregatorV3Interface.sol",
							"id": 187,
							"nodeType": "ImportDirective",
							"scope": 248,
							"sourceUnit": 46,
							"src": "419:76:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@chainlink/contracts/src/v0.6/vendor/SafeMathChainlink.sol",
							"file": "@chainlink/contracts/src/v0.6/vendor/SafeMathChainlink.sol",
							"id": 188,
							"nodeType": "ImportDirective",
							"scope": 248,
							"sourceUnit": 185,
							"src": "497:68:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 247,
							"linearizedBaseContracts": [
								247
							],
							"name": "FundMe",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 191,
									"mutability": "mutable",
									"name": "GOERLI_TESTNET_ETH_USD",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 247,
									"src": "598:75:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 189,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "598:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "307844346133333836303537384465363144424162446338424664623938464437343266413730323865",
										"id": 190,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "631:42:2",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										},
										"value": "0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "0504b2cd",
									"id": 195,
									"mutability": "mutable",
									"name": "addrToAmtFunded",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 247,
									"src": "680:47:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 194,
										"keyType": {
											"id": 192,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "688:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "680:24:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 193,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "699:4:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 206,
										"nodeType": "Block",
										"src": "767:59:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 204,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 198,
															"name": "addrToAmtFunded",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 195,
															"src": "778:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 201,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 199,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "794:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 200,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "794:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "778:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 202,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -15,
															"src": "809:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 203,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "809:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "778:40:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 205,
												"nodeType": "ExpressionStatement",
												"src": "778:40:2"
											}
										]
									},
									"documentation": null,
									"functionSelector": "b60d4288",
									"id": 207,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "fund",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "749:2:2"
									},
									"returnParameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "767:0:2"
									},
									"scope": 247,
									"src": "736:90:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 222,
										"nodeType": "Block",
										"src": "878:135:2",
										"statements": [
											{
												"assignments": [
													213
												],
												"declarations": [
													{
														"constant": false,
														"id": 213,
														"mutability": "mutable",
														"name": "priceFeed",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 222,
														"src": "889:31:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
															"typeString": "contract AggregatorV3Interface"
														},
														"typeName": {
															"contractScope": null,
															"id": 212,
															"name": "AggregatorV3Interface",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 45,
															"src": "889:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
																"typeString": "contract AggregatorV3Interface"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 217,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 215,
															"name": "GOERLI_TESTNET_ETH_USD",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 191,
															"src": "945:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 214,
														"name": "AggregatorV3Interface",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 45,
														"src": "923:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$45_$",
															"typeString": "type(contract AggregatorV3Interface)"
														}
													},
													"id": 216,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "923:45:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
														"typeString": "contract AggregatorV3Interface"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "889:79:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"argumentTypes": null,
															"id": 218,
															"name": "priceFeed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 213,
															"src": "986:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
																"typeString": "contract AggregatorV3Interface"
															}
														},
														"id": 219,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "version",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 16,
														"src": "986:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
															"typeString": "function () view external returns (uint256)"
														}
													},
													"id": 220,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "986:19:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 211,
												"id": 221,
												"nodeType": "Return",
												"src": "979:26:2"
											}
										]
									},
									"documentation": null,
									"functionSelector": "8793ad55",
									"id": 223,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getVer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "849:2:2"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 223,
												"src": "872:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 209,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "872:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "871:6:2"
									},
									"scope": 247,
									"src": "834:179:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 245,
										"nodeType": "Block",
										"src": "1067:231:2",
										"statements": [
											{
												"assignments": [
													229
												],
												"declarations": [
													{
														"constant": false,
														"id": 229,
														"mutability": "mutable",
														"name": "priceFeed",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 245,
														"src": "1078:31:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
															"typeString": "contract AggregatorV3Interface"
														},
														"typeName": {
															"contractScope": null,
															"id": 228,
															"name": "AggregatorV3Interface",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 45,
															"src": "1078:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
																"typeString": "contract AggregatorV3Interface"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 233,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 231,
															"name": "GOERLI_TESTNET_ETH_USD",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 191,
															"src": "1134:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 230,
														"name": "AggregatorV3Interface",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 45,
														"src": "1112:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$45_$",
															"typeString": "type(contract AggregatorV3Interface)"
														}
													},
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1112:45:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
														"typeString": "contract AggregatorV3Interface"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1078:79:2"
											},
											{
												"assignments": [
													null,
													235,
													null,
													null,
													null
												],
												"declarations": [
													null,
													{
														"constant": false,
														"id": 235,
														"mutability": "mutable",
														"name": "answer",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 245,
														"src": "1181:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 234,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "1181:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													null,
													null,
													null
												],
												"id": 239,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"argumentTypes": null,
															"id": 236,
															"name": "priceFeed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 229,
															"src": "1233:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
																"typeString": "contract AggregatorV3Interface"
															}
														},
														"id": 237,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "latestRoundData",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 44,
														"src": "1233:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
															"typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
														}
													},
													"id": 238,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1233:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
														"typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1168:92:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 242,
															"name": "answer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 235,
															"src": "1283:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 241,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1278:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 240,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1278:4:2",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1278:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 227,
												"id": 244,
												"nodeType": "Return",
												"src": "1271:19:2"
											}
										]
									},
									"documentation": null,
									"functionSelector": "98d5fdca",
									"id": 246,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPrice",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1038:2:2"
									},
									"returnParameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 246,
												"src": "1061:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 225,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1061:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1060:6:2"
									},
									"scope": 247,
									"src": "1021:277:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 248,
							"src": "569:732:2"
						}
					],
					"src": "157:1144:2"
				},
				"id": 2
			}
		}
	}
}