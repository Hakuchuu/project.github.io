{
	"id": "267132b50bd49ae3da3f415db986b725",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Coin.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.0;\r\n\r\ncontract CoinFlip {\r\n    address payable public player1;\r\n\r\n    bool private player1bit;\r\n    uint256 public betAmount;\r\n\r\n\r\n    constructor(bool choice) payable {\r\n        player1 = payable(msg.sender);\r\n        player1bit = choice;\r\n        betAmount = msg.value;\r\n    }\r\n\r\n    function TakeBet(bool choice) public payable {\r\n        require(msg.value == betAmount);\r\n\r\n        if (player1bit == choice) {\r\n            payable(msg.sender).transfer(address(this).balance);\r\n        } else {\r\n            player1.transfer(address(this).balance);\r\n        }\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/Coin.sol": {
				"CoinFlip": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "choice",
									"type": "bool"
								}
							],
							"stateMutability": "payable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "choice",
									"type": "bool"
								}
							],
							"name": "TakeBet",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "betAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "player1",
							"outputs": [
								{
									"internalType": "address payable",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Coin.sol\":62:628  contract CoinFlip {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Coin.sol\":191:334  constructor(bool choice) payable {\r... */\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_1\n  swap2\n  swap1\n  tag_2\n  jump\t// in\ntag_1:\n    /* \"contracts/Coin.sol\":253:263  msg.sender */\n  caller\n    /* \"contracts/Coin.sol\":235:242  player1 */\n  0x00\n  dup1\n    /* \"contracts/Coin.sol\":235:264  player1 = payable(msg.sender) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Coin.sol\":288:294  choice */\n  dup1\n    /* \"contracts/Coin.sol\":275:285  player1bit */\n  0x00\n  0x14\n    /* \"contracts/Coin.sol\":275:294  player1bit = choice */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Coin.sol\":317:326  msg.value */\n  callvalue\n    /* \"contracts/Coin.sol\":305:314  betAmount */\n  0x01\n    /* \"contracts/Coin.sol\":305:326  betAmount = msg.value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Coin.sol\":191:334  constructor(bool choice) payable {\r... */\n  pop\n    /* \"contracts/Coin.sol\":62:628  contract CoinFlip {\r... */\n  jump(tag_5)\n    /* \"#utility.yul\":7:144   */\ntag_7:\n    /* \"#utility.yul\":61:66   */\n  0x00\n    /* \"#utility.yul\":92:98   */\n  dup2\n    /* \"#utility.yul\":86:99   */\n  mload\n    /* \"#utility.yul\":77:99   */\n  swap1\n  pop\n    /* \"#utility.yul\":108:138   */\n  tag_9\n    /* \"#utility.yul\":132:137   */\n  dup2\n    /* \"#utility.yul\":108:138   */\n  tag_10\n  jump\t// in\ntag_9:\n    /* \"#utility.yul\":7:144   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":150:495   */\ntag_2:\n    /* \"#utility.yul\":217:223   */\n  0x00\n    /* \"#utility.yul\":266:268   */\n  0x20\n    /* \"#utility.yul\":254:263   */\n  dup3\n    /* \"#utility.yul\":245:252   */\n  dup5\n    /* \"#utility.yul\":241:264   */\n  sub\n    /* \"#utility.yul\":237:269   */\n  slt\n    /* \"#utility.yul\":234:353   */\n  iszero\n  tag_12\n  jumpi\n    /* \"#utility.yul\":272:351   */\n  tag_13\n  tag_14\n  jump\t// in\ntag_13:\n    /* \"#utility.yul\":234:353   */\ntag_12:\n    /* \"#utility.yul\":392:393   */\n  0x00\n    /* \"#utility.yul\":417:478   */\n  tag_15\n    /* \"#utility.yul\":470:477   */\n  dup5\n    /* \"#utility.yul\":461:467   */\n  dup3\n    /* \"#utility.yul\":450:459   */\n  dup6\n    /* \"#utility.yul\":446:468   */\n  add\n    /* \"#utility.yul\":417:478   */\n  tag_7\n  jump\t// in\ntag_15:\n    /* \"#utility.yul\":407:478   */\n  swap2\n  pop\n    /* \"#utility.yul\":363:488   */\n  pop\n    /* \"#utility.yul\":150:495   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":582:672   */\ntag_18:\n    /* \"#utility.yul\":616:623   */\n  0x00\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":652:665   */\n  iszero\n    /* \"#utility.yul\":645:666   */\n  iszero\n    /* \"#utility.yul\":634:666   */\n  swap1\n  pop\n    /* \"#utility.yul\":582:672   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":801:918   */\ntag_14:\n    /* \"#utility.yul\":910:911   */\n  0x00\n    /* \"#utility.yul\":907:908   */\n  dup1\n    /* \"#utility.yul\":900:912   */\n  revert\n    /* \"#utility.yul\":924:1040   */\ntag_10:\n    /* \"#utility.yul\":994:1015   */\n  tag_24\n    /* \"#utility.yul\":1009:1014   */\n  dup2\n    /* \"#utility.yul\":994:1015   */\n  tag_18\n  jump\t// in\ntag_24:\n    /* \"#utility.yul\":987:992   */\n  dup2\n    /* \"#utility.yul\":984:1016   */\n  eq\n    /* \"#utility.yul\":974:1034   */\n  tag_25\n  jumpi\n    /* \"#utility.yul\":1030:1031   */\n  0x00\n    /* \"#utility.yul\":1027:1028   */\n  dup1\n    /* \"#utility.yul\":1020:1032   */\n  revert\n    /* \"#utility.yul\":974:1034   */\ntag_25:\n    /* \"#utility.yul\":924:1040   */\n  pop\n  jump\t// out\n    /* \"contracts/Coin.sol\":62:628  contract CoinFlip {\r... */\ntag_5:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Coin.sol\":62:628  contract CoinFlip {\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xd24257c0\n      eq\n      tag_2\n      jumpi\n      dup1\n      0xd30895e4\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xde32e357\n      eq\n      tag_4\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Coin.sol\":156:180  uint256 public betAmount */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_5\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_5:\n      pop\n      tag_6\n      tag_7\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      tag_8\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Coin.sol\":87:117  address payable public player1 */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_10:\n      pop\n      tag_11\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Coin.sol\":342:625  function TakeBet(bool choice) public payable {\r... */\n    tag_4:\n      tag_15\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      tag_18\n      jump\t// in\n    tag_15:\n      stop\n        /* \"contracts/Coin.sol\":156:180  uint256 public betAmount */\n    tag_7:\n      sload(0x01)\n      dup2\n      jump\t// out\n        /* \"contracts/Coin.sol\":87:117  address payable public player1 */\n    tag_12:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/Coin.sol\":342:625  function TakeBet(bool choice) public payable {\r... */\n    tag_18:\n        /* \"contracts/Coin.sol\":419:428  betAmount */\n      sload(0x01)\n        /* \"contracts/Coin.sol\":406:415  msg.value */\n      callvalue\n        /* \"contracts/Coin.sol\":406:428  msg.value == betAmount */\n      eq\n        /* \"contracts/Coin.sol\":398:429  require(msg.value == betAmount) */\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n        /* \"contracts/Coin.sol\":460:466  choice */\n      dup1\n        /* \"contracts/Coin.sol\":446:466  player1bit == choice */\n      iszero\n      iszero\n        /* \"contracts/Coin.sol\":446:456  player1bit */\n      0x00\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Coin.sol\":446:466  player1bit == choice */\n      iszero\n      iszero\n      eq\n        /* \"contracts/Coin.sol\":442:618  if (player1bit == choice) {\r... */\n      iszero\n      tag_21\n      jumpi\n        /* \"contracts/Coin.sol\":491:501  msg.sender */\n      caller\n        /* \"contracts/Coin.sol\":483:511  payable(msg.sender).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Coin.sol\":483:534  payable(msg.sender).transfer(address(this).balance) */\n      0x08fc\n        /* \"contracts/Coin.sol\":512:533  address(this).balance */\n      selfbalance\n        /* \"contracts/Coin.sol\":483:534  payable(msg.sender).transfer(address(this).balance) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_23\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_23:\n      pop\n        /* \"contracts/Coin.sol\":442:618  if (player1bit == choice) {\r... */\n      jump(tag_24)\n    tag_21:\n        /* \"contracts/Coin.sol\":567:574  player1 */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Coin.sol\":567:583  player1.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Coin.sol\":567:606  player1.transfer(address(this).balance) */\n      0x08fc\n        /* \"contracts/Coin.sol\":584:605  address(this).balance */\n      selfbalance\n        /* \"contracts/Coin.sol\":567:606  player1.transfer(address(this).balance) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_26\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_26:\n      pop\n        /* \"contracts/Coin.sol\":442:618  if (player1bit == choice) {\r... */\n    tag_24:\n        /* \"contracts/Coin.sol\":342:625  function TakeBet(bool choice) public payable {\r... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:140   */\n    tag_28:\n        /* \"#utility.yul\":50:55   */\n      0x00\n        /* \"#utility.yul\":88:94   */\n      dup2\n        /* \"#utility.yul\":75:95   */\n      calldataload\n        /* \"#utility.yul\":66:95   */\n      swap1\n      pop\n        /* \"#utility.yul\":104:134   */\n      tag_30\n        /* \"#utility.yul\":128:133   */\n      dup2\n        /* \"#utility.yul\":104:134   */\n      tag_31\n      jump\t// in\n    tag_30:\n        /* \"#utility.yul\":7:140   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":146:469   */\n    tag_17:\n        /* \"#utility.yul\":202:208   */\n      0x00\n        /* \"#utility.yul\":251:253   */\n      0x20\n        /* \"#utility.yul\":239:248   */\n      dup3\n        /* \"#utility.yul\":230:237   */\n      dup5\n        /* \"#utility.yul\":226:249   */\n      sub\n        /* \"#utility.yul\":222:254   */\n      slt\n        /* \"#utility.yul\":219:338   */\n      iszero\n      tag_33\n      jumpi\n        /* \"#utility.yul\":257:336   */\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n        /* \"#utility.yul\":219:338   */\n    tag_33:\n        /* \"#utility.yul\":377:378   */\n      0x00\n        /* \"#utility.yul\":402:452   */\n      tag_36\n        /* \"#utility.yul\":444:451   */\n      dup5\n        /* \"#utility.yul\":435:441   */\n      dup3\n        /* \"#utility.yul\":424:433   */\n      dup6\n        /* \"#utility.yul\":420:442   */\n      add\n        /* \"#utility.yul\":402:452   */\n      tag_28\n      jump\t// in\n    tag_36:\n        /* \"#utility.yul\":392:452   */\n      swap2\n      pop\n        /* \"#utility.yul\":348:462   */\n      pop\n        /* \"#utility.yul\":146:469   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":475:617   */\n    tag_37:\n        /* \"#utility.yul\":578:610   */\n      tag_39\n        /* \"#utility.yul\":604:609   */\n      dup2\n        /* \"#utility.yul\":578:610   */\n      tag_40\n      jump\t// in\n    tag_39:\n        /* \"#utility.yul\":573:576   */\n      dup3\n        /* \"#utility.yul\":566:611   */\n      mstore\n        /* \"#utility.yul\":475:617   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":623:741   */\n    tag_41:\n        /* \"#utility.yul\":710:734   */\n      tag_43\n        /* \"#utility.yul\":728:733   */\n      dup2\n        /* \"#utility.yul\":710:734   */\n      tag_44\n      jump\t// in\n    tag_43:\n        /* \"#utility.yul\":705:708   */\n      dup3\n        /* \"#utility.yul\":698:735   */\n      mstore\n        /* \"#utility.yul\":623:741   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":747:1001   */\n    tag_14:\n        /* \"#utility.yul\":856:860   */\n      0x00\n        /* \"#utility.yul\":894:896   */\n      0x20\n        /* \"#utility.yul\":883:892   */\n      dup3\n        /* \"#utility.yul\":879:897   */\n      add\n        /* \"#utility.yul\":871:897   */\n      swap1\n      pop\n        /* \"#utility.yul\":907:994   */\n      tag_46\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":980:989   */\n      dup4\n        /* \"#utility.yul\":976:993   */\n      add\n        /* \"#utility.yul\":967:973   */\n      dup5\n        /* \"#utility.yul\":907:994   */\n      tag_37\n      jump\t// in\n    tag_46:\n        /* \"#utility.yul\":747:1001   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1007:1229   */\n    tag_9:\n        /* \"#utility.yul\":1100:1104   */\n      0x00\n        /* \"#utility.yul\":1138:1140   */\n      0x20\n        /* \"#utility.yul\":1127:1136   */\n      dup3\n        /* \"#utility.yul\":1123:1141   */\n      add\n        /* \"#utility.yul\":1115:1141   */\n      swap1\n      pop\n        /* \"#utility.yul\":1151:1222   */\n      tag_48\n        /* \"#utility.yul\":1219:1220   */\n      0x00\n        /* \"#utility.yul\":1208:1217   */\n      dup4\n        /* \"#utility.yul\":1204:1221   */\n      add\n        /* \"#utility.yul\":1195:1201   */\n      dup5\n        /* \"#utility.yul\":1151:1222   */\n      tag_41\n      jump\t// in\n    tag_48:\n        /* \"#utility.yul\":1007:1229   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1316:1420   */\n    tag_40:\n        /* \"#utility.yul\":1361:1368   */\n      0x00\n        /* \"#utility.yul\":1390:1414   */\n      tag_52\n        /* \"#utility.yul\":1408:1413   */\n      dup3\n        /* \"#utility.yul\":1390:1414   */\n      tag_53\n      jump\t// in\n    tag_52:\n        /* \"#utility.yul\":1379:1414   */\n      swap1\n      pop\n        /* \"#utility.yul\":1316:1420   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1426:1516   */\n    tag_54:\n        /* \"#utility.yul\":1460:1467   */\n      0x00\n        /* \"#utility.yul\":1503:1508   */\n      dup2\n        /* \"#utility.yul\":1496:1509   */\n      iszero\n        /* \"#utility.yul\":1489:1510   */\n      iszero\n        /* \"#utility.yul\":1478:1510   */\n      swap1\n      pop\n        /* \"#utility.yul\":1426:1516   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1522:1648   */\n    tag_53:\n        /* \"#utility.yul\":1559:1566   */\n      0x00\n        /* \"#utility.yul\":1599:1641   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1592:1597   */\n      dup3\n        /* \"#utility.yul\":1588:1642   */\n      and\n        /* \"#utility.yul\":1577:1642   */\n      swap1\n      pop\n        /* \"#utility.yul\":1522:1648   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1654:1731   */\n    tag_44:\n        /* \"#utility.yul\":1691:1698   */\n      0x00\n        /* \"#utility.yul\":1720:1725   */\n      dup2\n        /* \"#utility.yul\":1709:1725   */\n      swap1\n      pop\n        /* \"#utility.yul\":1654:1731   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1860:1977   */\n    tag_35:\n        /* \"#utility.yul\":1969:1970   */\n      0x00\n        /* \"#utility.yul\":1966:1967   */\n      dup1\n        /* \"#utility.yul\":1959:1971   */\n      revert\n        /* \"#utility.yul\":1983:2099   */\n    tag_31:\n        /* \"#utility.yul\":2053:2074   */\n      tag_62\n        /* \"#utility.yul\":2068:2073   */\n      dup2\n        /* \"#utility.yul\":2053:2074   */\n      tag_54\n      jump\t// in\n    tag_62:\n        /* \"#utility.yul\":2046:2051   */\n      dup2\n        /* \"#utility.yul\":2043:2075   */\n      eq\n        /* \"#utility.yul\":2033:2093   */\n      tag_63\n      jumpi\n        /* \"#utility.yul\":2089:2090   */\n      0x00\n        /* \"#utility.yul\":2086:2087   */\n      dup1\n        /* \"#utility.yul\":2079:2091   */\n      revert\n        /* \"#utility.yul\":2033:2093   */\n    tag_63:\n        /* \"#utility.yul\":1983:2099   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220a98958f40d8d9b71a6acfca05e205eb422a55bbf98ad8b553177ea3e10d3a1c564736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_30": {
									"entryPoint": null,
									"id": 30,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 140,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 161,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 206,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 218,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 223,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1043:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "67:77:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "77:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "92:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "86:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "86:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "77:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "132:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "108:23:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "108:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "108:30:1"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "45:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "53:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "61:5:1",
														"type": ""
													}
												],
												"src": "7:137:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "224:271:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "270:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "272:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "272:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "272:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "245:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "254:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "241:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "241:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "266:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "237:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "237:32:1"
															},
															"nodeType": "YulIf",
															"src": "234:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "363:125:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "378:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "392:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "382:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "407:71:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "450:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "461:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "446:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "446:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "470:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "417:28:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "417:61:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "407:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "194:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "205:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "217:6:1",
														"type": ""
													}
												],
												"src": "150:345:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "541:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "551:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "567:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "561:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "561:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "551:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "534:6:1",
														"type": ""
													}
												],
												"src": "501:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "624:48:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "634:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "659:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "652:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "652:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "645:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "645:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "634:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "606:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "616:7:1",
														"type": ""
													}
												],
												"src": "582:90:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "767:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "784:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "787:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "777:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "777:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "777:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "678:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "890:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "907:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "910:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "900:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "900:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "900:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "801:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "964:76:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1018:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1027:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1030:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1020:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1020:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1020:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "987:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1009:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "994:14:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "994:21:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "984:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "984:32:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "977:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "977:40:1"
															},
															"nodeType": "YulIf",
															"src": "974:60:1"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "957:5:1",
														"type": ""
													}
												],
												"src": "924:116:1"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040526040516103ea3803806103ea833981810160405281019061002591906100a1565b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600060146101000a81548160ff02191690831515021790555034600181905550506100f6565b60008151905061009b816100df565b92915050565b6000602082840312156100b7576100b66100da565b5b60006100c58482850161008c565b91505092915050565b60008115159050919050565b600080fd5b6100e8816100ce565b81146100f357600080fd5b50565b6102e5806101056000396000f3fe6080604052600436106100345760003560e01c8063d24257c014610039578063d30895e414610064578063de32e3571461008f575b600080fd5b34801561004557600080fd5b5061004e6100ab565b60405161005b9190610230565b60405180910390f35b34801561007057600080fd5b506100796100b1565b6040516100869190610215565b60405180910390f35b6100a960048036038101906100a491906101ca565b6100d5565b005b60015481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60015434146100e357600080fd5b801515600060149054906101000a900460ff161515141561014a573373ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015610144573d6000803e3d6000fd5b506101b2565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f193505050501580156101b0573d6000803e3d6000fd5b505b50565b6000813590506101c481610298565b92915050565b6000602082840312156101e0576101df610293565b5b60006101ee848285016101b5565b91505092915050565b6102008161024b565b82525050565b61020f81610289565b82525050565b600060208201905061022a60008301846101f7565b92915050565b60006020820190506102456000830184610206565b92915050565b600061025682610269565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600080fd5b6102a18161025d565b81146102ac57600080fd5b5056fea2646970667358221220a98958f40d8d9b71a6acfca05e205eb422a55bbf98ad8b553177ea3e10d3a1c564736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x3EA CODESIZE SUB DUP1 PUSH2 0x3EA DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x25 SWAP2 SWAP1 PUSH2 0xA1 JUMP JUMPDEST CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x0 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLVALUE PUSH1 0x1 DUP2 SWAP1 SSTORE POP POP PUSH2 0xF6 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x9B DUP2 PUSH2 0xDF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB7 JUMPI PUSH2 0xB6 PUSH2 0xDA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC5 DUP5 DUP3 DUP6 ADD PUSH2 0x8C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE8 DUP2 PUSH2 0xCE JUMP JUMPDEST DUP2 EQ PUSH2 0xF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2E5 DUP1 PUSH2 0x105 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x34 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xD24257C0 EQ PUSH2 0x39 JUMPI DUP1 PUSH4 0xD30895E4 EQ PUSH2 0x64 JUMPI DUP1 PUSH4 0xDE32E357 EQ PUSH2 0x8F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4E PUSH2 0xAB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x230 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x70 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x79 PUSH2 0xB1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x86 SWAP2 SWAP1 PUSH2 0x215 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA4 SWAP2 SWAP1 PUSH2 0x1CA JUMP JUMPDEST PUSH2 0xD5 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD CALLVALUE EQ PUSH2 0xE3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 ISZERO ISZERO PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ ISZERO PUSH2 0x14A JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x144 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0x1B2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x1B0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1C4 DUP2 PUSH2 0x298 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E0 JUMPI PUSH2 0x1DF PUSH2 0x293 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1EE DUP5 DUP3 DUP6 ADD PUSH2 0x1B5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x200 DUP2 PUSH2 0x24B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x20F DUP2 PUSH2 0x289 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x22A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1F7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x245 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x206 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x256 DUP3 PUSH2 0x269 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2A1 DUP2 PUSH2 0x25D JUMP JUMPDEST DUP2 EQ PUSH2 0x2AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA9 DUP10 PC DELEGATECALL 0xD DUP14 SWAP12 PUSH18 0xA6ACFCA05E205EB422A55BBF98AD8B553177 0xEA RETURNDATACOPY LT 0xD3 LOG1 0xC5 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "62:566:0:-:0;;;191:143;;;;;;;;;;;;;;;;;;;;;:::i;:::-;253:10;235:7;;:29;;;;;;;;;;;;;;;;;;288:6;275:10;;:19;;;;;;;;;;;;;;;;;;317:9;305;:21;;;;191:143;62:566;;7:137:1;61:5;92:6;86:13;77:22;;108:30;132:5;108:30;:::i;:::-;7:137;;;;:::o;150:345::-;217:6;266:2;254:9;245:7;241:23;237:32;234:119;;;272:79;;:::i;:::-;234:119;392:1;417:61;470:7;461:6;450:9;446:22;417:61;:::i;:::-;407:71;;363:125;150:345;;;;:::o;582:90::-;616:7;659:5;652:13;645:21;634:32;;582:90;;;:::o;801:117::-;910:1;907;900:12;924:116;994:21;1009:5;994:21;:::i;:::-;987:5;984:32;974:60;;1030:1;1027;1020:12;974:60;924:116;:::o;62:566:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@TakeBet_72": {
									"entryPoint": 213,
									"id": 72,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@betAmount_7": {
									"entryPoint": 171,
									"id": 7,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@player1_3": {
									"entryPoint": 177,
									"id": 3,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_bool": {
									"entryPoint": 437,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool": {
									"entryPoint": 458,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_payable_to_t_address_payable_fromStack": {
									"entryPoint": 503,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 518,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed": {
									"entryPoint": 533,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 560,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address_payable": {
									"entryPoint": 587,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 605,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 617,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 649,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 659,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 664,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2102:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "56:84:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "66:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "88:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "75:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "75:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "66:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "128:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "104:23:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "104:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "104:30:1"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "34:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "42:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "50:5:1",
														"type": ""
													}
												],
												"src": "7:133:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "209:260:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "255:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "257:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "257:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "257:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "230:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "239:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "226:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "226:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "251:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "222:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "222:32:1"
															},
															"nodeType": "YulIf",
															"src": "219:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "348:114:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "363:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "377:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "367:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "392:60:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "424:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "435:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "420:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "420:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "444:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "402:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "402:50:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "392:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "179:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "190:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "202:6:1",
														"type": ""
													}
												],
												"src": "146:323:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "556:61:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "573:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "604:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address_payable",
																			"nodeType": "YulIdentifier",
																			"src": "578:25:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "578:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "566:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "566:45:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "566:45:1"
														}
													]
												},
												"name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "544:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "551:3:1",
														"type": ""
													}
												],
												"src": "475:142:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "688:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "705:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "728:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "710:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "710:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "698:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "698:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "698:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "676:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "683:3:1",
														"type": ""
													}
												],
												"src": "623:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "861:140:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "871:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "883:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "894:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "879:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "879:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "871:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "967:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "980:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "991:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "976:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "976:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "907:59:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "907:87:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "907:87:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "833:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "845:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "856:4:1",
														"type": ""
													}
												],
												"src": "747:254:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1105:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1115:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1127:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1138:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1123:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1123:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1115:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1195:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1208:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1219:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1204:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1204:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1151:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1151:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1151:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1077:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1089:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1100:4:1",
														"type": ""
													}
												],
												"src": "1007:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1275:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1285:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1301:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1295:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1295:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1285:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1268:6:1",
														"type": ""
													}
												],
												"src": "1235:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1369:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1379:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1408:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1390:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1390:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1379:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1351:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1361:7:1",
														"type": ""
													}
												],
												"src": "1316:104:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1468:48:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1478:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1503:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1496:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1496:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1489:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1489:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1478:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1450:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1460:7:1",
														"type": ""
													}
												],
												"src": "1426:90:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1567:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1577:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1592:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1599:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1588:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1588:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1577:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1549:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1559:7:1",
														"type": ""
													}
												],
												"src": "1522:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1699:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1709:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1720:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1709:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1681:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1691:7:1",
														"type": ""
													}
												],
												"src": "1654:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1826:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1843:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1846:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1836:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1836:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1836:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "1737:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1949:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1966:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1969:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1959:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1959:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1959:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "1860:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2023:76:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2077:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2086:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2089:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2079:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2079:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2079:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2046:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2068:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "2053:14:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2053:21:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2043:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2043:32:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2036:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2036:40:1"
															},
															"nodeType": "YulIf",
															"src": "2033:60:1"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2016:5:1",
														"type": ""
													}
												],
												"src": "1983:116:1"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_payable_to_t_address_payable_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address_payable(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_payable_to_t_address_payable_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100345760003560e01c8063d24257c014610039578063d30895e414610064578063de32e3571461008f575b600080fd5b34801561004557600080fd5b5061004e6100ab565b60405161005b9190610230565b60405180910390f35b34801561007057600080fd5b506100796100b1565b6040516100869190610215565b60405180910390f35b6100a960048036038101906100a491906101ca565b6100d5565b005b60015481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60015434146100e357600080fd5b801515600060149054906101000a900460ff161515141561014a573373ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015610144573d6000803e3d6000fd5b506101b2565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f193505050501580156101b0573d6000803e3d6000fd5b505b50565b6000813590506101c481610298565b92915050565b6000602082840312156101e0576101df610293565b5b60006101ee848285016101b5565b91505092915050565b6102008161024b565b82525050565b61020f81610289565b82525050565b600060208201905061022a60008301846101f7565b92915050565b60006020820190506102456000830184610206565b92915050565b600061025682610269565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600080fd5b6102a18161025d565b81146102ac57600080fd5b5056fea2646970667358221220a98958f40d8d9b71a6acfca05e205eb422a55bbf98ad8b553177ea3e10d3a1c564736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x34 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xD24257C0 EQ PUSH2 0x39 JUMPI DUP1 PUSH4 0xD30895E4 EQ PUSH2 0x64 JUMPI DUP1 PUSH4 0xDE32E357 EQ PUSH2 0x8F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4E PUSH2 0xAB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x230 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x70 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x79 PUSH2 0xB1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x86 SWAP2 SWAP1 PUSH2 0x215 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA4 SWAP2 SWAP1 PUSH2 0x1CA JUMP JUMPDEST PUSH2 0xD5 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD CALLVALUE EQ PUSH2 0xE3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 ISZERO ISZERO PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ ISZERO PUSH2 0x14A JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x144 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0x1B2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x1B0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1C4 DUP2 PUSH2 0x298 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E0 JUMPI PUSH2 0x1DF PUSH2 0x293 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1EE DUP5 DUP3 DUP6 ADD PUSH2 0x1B5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x200 DUP2 PUSH2 0x24B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x20F DUP2 PUSH2 0x289 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x22A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1F7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x245 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x206 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x256 DUP3 PUSH2 0x269 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2A1 DUP2 PUSH2 0x25D JUMP JUMPDEST DUP2 EQ PUSH2 0x2AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA9 DUP10 PC DELEGATECALL 0xD DUP14 SWAP12 PUSH18 0xA6ACFCA05E205EB422A55BBF98AD8B553177 0xEA RETURNDATACOPY LT 0xD3 LOG1 0xC5 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "62:566:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;156:24;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;87:30;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;342:283;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;156:24;;;;:::o;87:30::-;;;;;;;;;;;;:::o;342:283::-;419:9;;406;:22;398:31;;;;;;460:6;446:20;;:10;;;;;;;;;;;:20;;;442:176;;;491:10;483:28;;:51;512:21;483:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;442:176;;;567:7;;;;;;;;;;:16;;:39;584:21;567:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;442:176;342:283;:::o;7:133:1:-;50:5;88:6;75:20;66:29;;104:30;128:5;104:30;:::i;:::-;7:133;;;;:::o;146:323::-;202:6;251:2;239:9;230:7;226:23;222:32;219:119;;;257:79;;:::i;:::-;219:119;377:1;402:50;444:7;435:6;424:9;420:22;402:50;:::i;:::-;392:60;;348:114;146:323;;;;:::o;475:142::-;578:32;604:5;578:32;:::i;:::-;573:3;566:45;475:142;;:::o;623:118::-;710:24;728:5;710:24;:::i;:::-;705:3;698:37;623:118;;:::o;747:254::-;856:4;894:2;883:9;879:18;871:26;;907:87;991:1;980:9;976:17;967:6;907:87;:::i;:::-;747:254;;;;:::o;1007:222::-;1100:4;1138:2;1127:9;1123:18;1115:26;;1151:71;1219:1;1208:9;1204:17;1195:6;1151:71;:::i;:::-;1007:222;;;;:::o;1316:104::-;1361:7;1390:24;1408:5;1390:24;:::i;:::-;1379:35;;1316:104;;;:::o;1426:90::-;1460:7;1503:5;1496:13;1489:21;1478:32;;1426:90;;;:::o;1522:126::-;1559:7;1599:42;1592:5;1588:54;1577:65;;1522:126;;;:::o;1654:77::-;1691:7;1720:5;1709:16;;1654:77;;;:::o;1860:117::-;1969:1;1966;1959:12;1983:116;2053:21;2068:5;2053:21;:::i;:::-;2046:5;2043:32;2033:60;;2089:1;2086;2079:12;2033:60;1983:116;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "148200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"TakeBet(bool)": "infinite",
								"betAmount()": "2407",
								"player1()": "2511"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 62,
									"end": 628,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 62,
									"end": 628,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 62,
									"end": 628,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 191,
									"end": 334,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 191,
									"end": 334,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 191,
									"end": 334,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 191,
									"end": 334,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 191,
									"end": 334,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 191,
									"end": 334,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 191,
									"end": 334,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 191,
									"end": 334,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 191,
									"end": 334,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 191,
									"end": 334,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 191,
									"end": 334,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 191,
									"end": 334,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 191,
									"end": 334,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 191,
									"end": 334,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 191,
									"end": 334,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 191,
									"end": 334,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 191,
									"end": 334,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 191,
									"end": 334,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 191,
									"end": 334,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 191,
									"end": 334,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 191,
									"end": 334,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 191,
									"end": 334,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 191,
									"end": 334,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 191,
									"end": 334,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 253,
									"end": 263,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 235,
									"end": 242,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 235,
									"end": 242,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 235,
									"end": 264,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 235,
									"end": 264,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 235,
									"end": 264,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 235,
									"end": 264,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 235,
									"end": 264,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 235,
									"end": 264,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 235,
									"end": 264,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 235,
									"end": 264,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 235,
									"end": 264,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 235,
									"end": 264,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 235,
									"end": 264,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 235,
									"end": 264,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 235,
									"end": 264,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 235,
									"end": 264,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 235,
									"end": 264,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 235,
									"end": 264,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 235,
									"end": 264,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 235,
									"end": 264,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 288,
									"end": 294,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 275,
									"end": 285,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 275,
									"end": 285,
									"name": "PUSH",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 275,
									"end": 294,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 275,
									"end": 294,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 275,
									"end": 294,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 275,
									"end": 294,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 275,
									"end": 294,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 275,
									"end": 294,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 275,
									"end": 294,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 275,
									"end": 294,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 275,
									"end": 294,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 275,
									"end": 294,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 275,
									"end": 294,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 275,
									"end": 294,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 275,
									"end": 294,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 275,
									"end": 294,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 275,
									"end": 294,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 275,
									"end": 294,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 275,
									"end": 294,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 275,
									"end": 294,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 317,
									"end": 326,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 305,
									"end": 314,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 305,
									"end": 326,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 305,
									"end": 326,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 305,
									"end": 326,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 305,
									"end": 326,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 191,
									"end": 334,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 62,
									"end": 628,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 62,
									"end": 628,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 144,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 7,
									"end": 144,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 61,
									"end": 66,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 92,
									"end": 98,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 86,
									"end": 99,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 77,
									"end": 99,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 77,
									"end": 99,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 108,
									"end": 138,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 132,
									"end": 137,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 108,
									"end": 138,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 108,
									"end": 138,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 108,
									"end": 138,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 108,
									"end": 138,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7,
									"end": 144,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 7,
									"end": 144,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7,
									"end": 144,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 144,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 144,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 150,
									"end": 495,
									"name": "tag",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 150,
									"end": 495,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 217,
									"end": 223,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 266,
									"end": 268,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 254,
									"end": 263,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 245,
									"end": 252,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 241,
									"end": 264,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 237,
									"end": 269,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 234,
									"end": 353,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 234,
									"end": 353,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 234,
									"end": 353,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 272,
									"end": 351,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 272,
									"end": 351,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 272,
									"end": 351,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 272,
									"end": 351,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 272,
									"end": 351,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 234,
									"end": 353,
									"name": "tag",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 234,
									"end": 353,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 392,
									"end": 393,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 417,
									"end": 478,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 470,
									"end": 477,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 461,
									"end": 467,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 450,
									"end": 459,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 446,
									"end": 468,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 417,
									"end": 478,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 417,
									"end": 478,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 417,
									"end": 478,
									"name": "tag",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 417,
									"end": 478,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 407,
									"end": 478,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 407,
									"end": 478,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 363,
									"end": 488,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 150,
									"end": 495,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 150,
									"end": 495,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 150,
									"end": 495,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 150,
									"end": 495,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 150,
									"end": 495,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 582,
									"end": 672,
									"name": "tag",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 582,
									"end": 672,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 616,
									"end": 623,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 652,
									"end": 665,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 645,
									"end": 666,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 634,
									"end": 666,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 634,
									"end": 666,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 582,
									"end": 672,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 582,
									"end": 672,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 582,
									"end": 672,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 582,
									"end": 672,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 801,
									"end": 918,
									"name": "tag",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 801,
									"end": 918,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 910,
									"end": 911,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 907,
									"end": 908,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 900,
									"end": 912,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 924,
									"end": 1040,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 924,
									"end": 1040,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 994,
									"end": 1015,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1009,
									"end": 1014,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 994,
									"end": 1015,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 994,
									"end": 1015,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 994,
									"end": 1015,
									"name": "tag",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 994,
									"end": 1015,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 987,
									"end": 992,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 984,
									"end": 1016,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 974,
									"end": 1034,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 974,
									"end": 1034,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1030,
									"end": 1031,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1027,
									"end": 1028,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1020,
									"end": 1032,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 974,
									"end": 1034,
									"name": "tag",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 974,
									"end": 1034,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 924,
									"end": 1040,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 924,
									"end": 1040,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 62,
									"end": 628,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 62,
									"end": 628,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 62,
									"end": 628,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 62,
									"end": 628,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 62,
									"end": 628,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 62,
									"end": 628,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 62,
									"end": 628,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 62,
									"end": 628,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 62,
									"end": 628,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a98958f40d8d9b71a6acfca05e205eb422a55bbf98ad8b553177ea3e10d3a1c564736f6c63430008070033",
									".code": [
										{
											"begin": 62,
											"end": 628,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 62,
											"end": 628,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 62,
											"end": 628,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 62,
											"end": 628,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 62,
											"end": 628,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 62,
											"end": 628,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 62,
											"end": 628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 62,
											"end": 628,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 62,
											"end": 628,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 62,
											"end": 628,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 62,
											"end": 628,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 62,
											"end": 628,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 62,
											"end": 628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 62,
											"end": 628,
											"name": "PUSH",
											"source": 0,
											"value": "D24257C0"
										},
										{
											"begin": 62,
											"end": 628,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 62,
											"end": 628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 62,
											"end": 628,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 62,
											"end": 628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 62,
											"end": 628,
											"name": "PUSH",
											"source": 0,
											"value": "D30895E4"
										},
										{
											"begin": 62,
											"end": 628,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 62,
											"end": 628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 62,
											"end": 628,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 62,
											"end": 628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 62,
											"end": 628,
											"name": "PUSH",
											"source": 0,
											"value": "DE32E357"
										},
										{
											"begin": 62,
											"end": 628,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 62,
											"end": 628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 62,
											"end": 628,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 62,
											"end": 628,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 62,
											"end": 628,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 62,
											"end": 628,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 62,
											"end": 628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 62,
											"end": 628,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 156,
											"end": 180,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 156,
											"end": 180,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 156,
											"end": 180,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 156,
											"end": 180,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 156,
											"end": 180,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 156,
											"end": 180,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 156,
											"end": 180,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 156,
											"end": 180,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 156,
											"end": 180,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 156,
											"end": 180,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 156,
											"end": 180,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 156,
											"end": 180,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 156,
											"end": 180,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 156,
											"end": 180,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 156,
											"end": 180,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 156,
											"end": 180,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 156,
											"end": 180,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 156,
											"end": 180,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 156,
											"end": 180,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 156,
											"end": 180,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 156,
											"end": 180,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 156,
											"end": 180,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 156,
											"end": 180,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 156,
											"end": 180,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 156,
											"end": 180,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 156,
											"end": 180,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 156,
											"end": 180,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 156,
											"end": 180,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 156,
											"end": 180,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 156,
											"end": 180,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 156,
											"end": 180,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 156,
											"end": 180,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 156,
											"end": 180,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 156,
											"end": 180,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 87,
											"end": 117,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 87,
											"end": 117,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 87,
											"end": 117,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 87,
											"end": 117,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 87,
											"end": 117,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 87,
											"end": 117,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 87,
											"end": 117,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 87,
											"end": 117,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 87,
											"end": 117,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 87,
											"end": 117,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 87,
											"end": 117,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 87,
											"end": 117,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 87,
											"end": 117,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 87,
											"end": 117,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 87,
											"end": 117,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 87,
											"end": 117,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 87,
											"end": 117,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 87,
											"end": 117,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 87,
											"end": 117,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 87,
											"end": 117,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 87,
											"end": 117,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 87,
											"end": 117,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 87,
											"end": 117,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 87,
											"end": 117,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 87,
											"end": 117,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 87,
											"end": 117,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 87,
											"end": 117,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 87,
											"end": 117,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 87,
											"end": 117,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 87,
											"end": 117,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 87,
											"end": 117,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 87,
											"end": 117,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 87,
											"end": 117,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 87,
											"end": 117,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 342,
											"end": 625,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 342,
											"end": 625,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 342,
											"end": 625,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 342,
											"end": 625,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 342,
											"end": 625,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 342,
											"end": 625,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 342,
											"end": 625,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 342,
											"end": 625,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 342,
											"end": 625,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 342,
											"end": 625,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 342,
											"end": 625,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 342,
											"end": 625,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 342,
											"end": 625,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 342,
											"end": 625,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 342,
											"end": 625,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 342,
											"end": 625,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 342,
											"end": 625,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 342,
											"end": 625,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 342,
											"end": 625,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 342,
											"end": 625,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 342,
											"end": 625,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 342,
											"end": 625,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 156,
											"end": 180,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 156,
											"end": 180,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 156,
											"end": 180,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 156,
											"end": 180,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 156,
											"end": 180,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 156,
											"end": 180,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 87,
											"end": 117,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 87,
											"end": 117,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 87,
											"end": 117,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 87,
											"end": 117,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 87,
											"end": 117,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 87,
											"end": 117,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 87,
											"end": 117,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 87,
											"end": 117,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 87,
											"end": 117,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 87,
											"end": 117,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 87,
											"end": 117,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 87,
											"end": 117,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 87,
											"end": 117,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 87,
											"end": 117,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 342,
											"end": 625,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 342,
											"end": 625,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 419,
											"end": 428,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 419,
											"end": 428,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 406,
											"end": 415,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 406,
											"end": 428,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 398,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 398,
											"end": 429,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 398,
											"end": 429,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 398,
											"end": 429,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 398,
											"end": 429,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 398,
											"end": 429,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 398,
											"end": 429,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 460,
											"end": 466,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 446,
											"end": 466,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 446,
											"end": 466,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 446,
											"end": 456,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 446,
											"end": 456,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 446,
											"end": 456,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 446,
											"end": 456,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 446,
											"end": 456,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 446,
											"end": 456,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 446,
											"end": 456,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 446,
											"end": 456,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 446,
											"end": 456,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 446,
											"end": 456,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 446,
											"end": 456,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 446,
											"end": 466,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 446,
											"end": 466,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 446,
											"end": 466,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 442,
											"end": 618,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 442,
											"end": 618,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 442,
											"end": 618,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 491,
											"end": 501,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 483,
											"end": 511,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 483,
											"end": 511,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 483,
											"end": 534,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 512,
											"end": 533,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 483,
											"end": 534,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 483,
											"end": 534,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 483,
											"end": 534,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 483,
											"end": 534,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 483,
											"end": 534,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 483,
											"end": 534,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 483,
											"end": 534,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 483,
											"end": 534,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 483,
											"end": 534,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 483,
											"end": 534,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 483,
											"end": 534,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 483,
											"end": 534,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 483,
											"end": 534,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 483,
											"end": 534,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 483,
											"end": 534,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 483,
											"end": 534,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 483,
											"end": 534,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 483,
											"end": 534,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 483,
											"end": 534,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 483,
											"end": 534,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 483,
											"end": 534,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 483,
											"end": 534,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 483,
											"end": 534,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 483,
											"end": 534,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 483,
											"end": 534,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 483,
											"end": 534,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 483,
											"end": 534,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 483,
											"end": 534,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 483,
											"end": 534,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 483,
											"end": 534,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 483,
											"end": 534,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 483,
											"end": 534,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 483,
											"end": 534,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 483,
											"end": 534,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 483,
											"end": 534,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 483,
											"end": 534,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 483,
											"end": 534,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 483,
											"end": 534,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 442,
											"end": 618,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 442,
											"end": 618,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 442,
											"end": 618,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 442,
											"end": 618,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 567,
											"end": 574,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 567,
											"end": 574,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 567,
											"end": 574,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 567,
											"end": 574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 567,
											"end": 574,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 567,
											"end": 574,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 567,
											"end": 574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 567,
											"end": 574,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 567,
											"end": 574,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 567,
											"end": 574,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 567,
											"end": 583,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 567,
											"end": 583,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 567,
											"end": 606,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 584,
											"end": 605,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 567,
											"end": 606,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 567,
											"end": 606,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 567,
											"end": 606,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 567,
											"end": 606,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 567,
											"end": 606,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 567,
											"end": 606,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 567,
											"end": 606,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 567,
											"end": 606,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 567,
											"end": 606,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 567,
											"end": 606,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 567,
											"end": 606,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 567,
											"end": 606,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 567,
											"end": 606,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 567,
											"end": 606,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 567,
											"end": 606,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 567,
											"end": 606,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 567,
											"end": 606,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 567,
											"end": 606,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 567,
											"end": 606,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 567,
											"end": 606,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 567,
											"end": 606,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 567,
											"end": 606,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 567,
											"end": 606,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 567,
											"end": 606,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 567,
											"end": 606,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 567,
											"end": 606,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 567,
											"end": 606,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 567,
											"end": 606,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 567,
											"end": 606,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 567,
											"end": 606,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 567,
											"end": 606,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 567,
											"end": 606,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 567,
											"end": 606,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 567,
											"end": 606,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 567,
											"end": 606,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 567,
											"end": 606,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 567,
											"end": 606,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 567,
											"end": 606,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 442,
											"end": 618,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 442,
											"end": 618,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 342,
											"end": 625,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 342,
											"end": 625,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 140,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 7,
											"end": 140,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 50,
											"end": 55,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 88,
											"end": 94,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 75,
											"end": 95,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 66,
											"end": 95,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 66,
											"end": 95,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 104,
											"end": 134,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 128,
											"end": 133,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 104,
											"end": 134,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 104,
											"end": 134,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 104,
											"end": 134,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 104,
											"end": 134,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7,
											"end": 140,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7,
											"end": 140,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 140,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 140,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 140,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 146,
											"end": 469,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 146,
											"end": 469,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 202,
											"end": 208,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 251,
											"end": 253,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 239,
											"end": 248,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 230,
											"end": 237,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 226,
											"end": 249,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 222,
											"end": 254,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 219,
											"end": 338,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 219,
											"end": 338,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 219,
											"end": 338,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 257,
											"end": 336,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 257,
											"end": 336,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 257,
											"end": 336,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 257,
											"end": 336,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 257,
											"end": 336,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 219,
											"end": 338,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 219,
											"end": 338,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 377,
											"end": 378,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 402,
											"end": 452,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 444,
											"end": 451,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 435,
											"end": 441,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 424,
											"end": 433,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 420,
											"end": 442,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 402,
											"end": 452,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 402,
											"end": 452,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 402,
											"end": 452,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 402,
											"end": 452,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 392,
											"end": 452,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 392,
											"end": 452,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 348,
											"end": 462,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 146,
											"end": 469,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 146,
											"end": 469,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 146,
											"end": 469,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 146,
											"end": 469,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 146,
											"end": 469,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 475,
											"end": 617,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 475,
											"end": 617,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 578,
											"end": 610,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 604,
											"end": 609,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 578,
											"end": 610,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 578,
											"end": 610,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 578,
											"end": 610,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 578,
											"end": 610,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 573,
											"end": 576,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 566,
											"end": 611,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 475,
											"end": 617,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 475,
											"end": 617,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 475,
											"end": 617,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 623,
											"end": 741,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 623,
											"end": 741,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 710,
											"end": 734,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 728,
											"end": 733,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 710,
											"end": 734,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 710,
											"end": 734,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 710,
											"end": 734,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 710,
											"end": 734,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 705,
											"end": 708,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 698,
											"end": 735,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 623,
											"end": 741,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 623,
											"end": 741,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 623,
											"end": 741,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 747,
											"end": 1001,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 747,
											"end": 1001,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 856,
											"end": 860,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 894,
											"end": 896,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 883,
											"end": 892,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 879,
											"end": 897,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 871,
											"end": 897,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 871,
											"end": 897,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 907,
											"end": 994,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 980,
											"end": 989,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 976,
											"end": 993,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 967,
											"end": 973,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 907,
											"end": 994,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 907,
											"end": 994,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 907,
											"end": 994,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 907,
											"end": 994,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 747,
											"end": 1001,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 747,
											"end": 1001,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 747,
											"end": 1001,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 747,
											"end": 1001,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 747,
											"end": 1001,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1007,
											"end": 1229,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1007,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1100,
											"end": 1104,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1138,
											"end": 1140,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1127,
											"end": 1136,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1123,
											"end": 1141,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1115,
											"end": 1141,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1115,
											"end": 1141,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1222,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 1219,
											"end": 1220,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1208,
											"end": 1217,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1204,
											"end": 1221,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1195,
											"end": 1201,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1222,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1151,
											"end": 1222,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1151,
											"end": 1222,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 1151,
											"end": 1222,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1007,
											"end": 1229,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1007,
											"end": 1229,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1007,
											"end": 1229,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1007,
											"end": 1229,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1007,
											"end": 1229,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1316,
											"end": 1420,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1316,
											"end": 1420,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1361,
											"end": 1368,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1390,
											"end": 1414,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1408,
											"end": 1413,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1390,
											"end": 1414,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1390,
											"end": 1414,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1390,
											"end": 1414,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1390,
											"end": 1414,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1379,
											"end": 1414,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1379,
											"end": 1414,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1316,
											"end": 1420,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1316,
											"end": 1420,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1316,
											"end": 1420,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1316,
											"end": 1420,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1426,
											"end": 1516,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1426,
											"end": 1516,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1460,
											"end": 1467,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1503,
											"end": 1508,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1496,
											"end": 1509,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1489,
											"end": 1510,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1478,
											"end": 1510,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1478,
											"end": 1510,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1426,
											"end": 1516,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1426,
											"end": 1516,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1426,
											"end": 1516,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1426,
											"end": 1516,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1522,
											"end": 1648,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1522,
											"end": 1648,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1559,
											"end": 1566,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1599,
											"end": 1641,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1592,
											"end": 1597,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1588,
											"end": 1642,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1577,
											"end": 1642,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1577,
											"end": 1642,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1522,
											"end": 1648,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1522,
											"end": 1648,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1522,
											"end": 1648,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1522,
											"end": 1648,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1654,
											"end": 1731,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1654,
											"end": 1731,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1691,
											"end": 1698,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1720,
											"end": 1725,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1709,
											"end": 1725,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1709,
											"end": 1725,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1654,
											"end": 1731,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1654,
											"end": 1731,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1654,
											"end": 1731,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1654,
											"end": 1731,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1860,
											"end": 1977,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 1860,
											"end": 1977,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1969,
											"end": 1970,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1966,
											"end": 1967,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1959,
											"end": 1971,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1983,
											"end": 2099,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1983,
											"end": 2099,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 2068,
											"end": 2073,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 2053,
											"end": 2074,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2053,
											"end": 2074,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 2053,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2046,
											"end": 2051,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2043,
											"end": 2075,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2033,
											"end": 2093,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 2033,
											"end": 2093,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2089,
											"end": 2090,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2086,
											"end": 2087,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2079,
											"end": 2091,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2033,
											"end": 2093,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 2033,
											"end": 2093,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1983,
											"end": 2099,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1983,
											"end": 2099,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"TakeBet(bool)": "de32e357",
							"betAmount()": "d24257c0",
							"player1()": "d30895e4"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"choice\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"choice\",\"type\":\"bool\"}],\"name\":\"TakeBet\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"betAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"player1\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Coin.sol\":\"CoinFlip\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Coin.sol\":{\"keccak256\":\"0x7949ef28d56eba1dec80ef7ac4af125d56818b2e2ec1225a6f478392ee7f5068\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6f84c00c6a6506408371ddb2ffb3a26d748d5958daa59b4203224359c280293\",\"dweb:/ipfs/Qmas6YneWsaCrt5oPM4ej4quypNvzveTod3ENt3WRPGVzZ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "contracts/Coin.sol:CoinFlip",
								"label": "player1",
								"offset": 0,
								"slot": "0",
								"type": "t_address_payable"
							},
							{
								"astId": 5,
								"contract": "contracts/Coin.sol:CoinFlip",
								"label": "player1bit",
								"offset": 20,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 7,
								"contract": "contracts/Coin.sol:CoinFlip",
								"label": "betAmount",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/Coin.sol": {
				"ast": {
					"absolutePath": "contracts/Coin.sol",
					"exportedSymbols": {
						"CoinFlip": [
							73
						]
					},
					"id": 74,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 73,
							"linearizedBaseContracts": [
								73
							],
							"name": "CoinFlip",
							"nameLocation": "71:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "d30895e4",
									"id": 3,
									"mutability": "mutable",
									"name": "player1",
									"nameLocation": "110:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 73,
									"src": "87:30:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 2,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "87:15:0",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 5,
									"mutability": "mutable",
									"name": "player1bit",
									"nameLocation": "139:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 73,
									"src": "126:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 4,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "126:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "d24257c0",
									"id": 7,
									"mutability": "mutable",
									"name": "betAmount",
									"nameLocation": "171:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 73,
									"src": "156:24:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 6,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "156:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 29,
										"nodeType": "Block",
										"src": "224:110:0",
										"statements": [
											{
												"expression": {
													"id": 18,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 12,
														"name": "player1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "235:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 15,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "253:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 16,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "253:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 14,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "245:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_payable_$",
																"typeString": "type(address payable)"
															},
															"typeName": {
																"id": 13,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "245:8:0",
																"stateMutability": "payable",
																"typeDescriptions": {}
															}
														},
														"id": 17,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "245:19:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "235:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 19,
												"nodeType": "ExpressionStatement",
												"src": "235:29:0"
											},
											{
												"expression": {
													"id": 22,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 20,
														"name": "player1bit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "275:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 21,
														"name": "choice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "288:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "275:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 23,
												"nodeType": "ExpressionStatement",
												"src": "275:19:0"
											},
											{
												"expression": {
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 24,
														"name": "betAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "305:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 25,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "317:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 26,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "317:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "305:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "305:21:0"
											}
										]
									},
									"id": 30,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "choice",
												"nameLocation": "208:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "203:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 8,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "203:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "202:13:0"
									},
									"returnParameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "224:0:0"
									},
									"scope": 73,
									"src": "191:143:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 71,
										"nodeType": "Block",
										"src": "387:238:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 39,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 36,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "406:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 37,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "406:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 38,
																"name": "betAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 7,
																"src": "419:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "406:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 35,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "398:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 40,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "398:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 41,
												"nodeType": "ExpressionStatement",
												"src": "398:31:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 44,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 42,
														"name": "player1bit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "446:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 43,
														"name": "choice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 32,
														"src": "460:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "446:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 69,
													"nodeType": "Block",
													"src": "552:66:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 64,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "592:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_CoinFlip_$73",
																						"typeString": "contract CoinFlip"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_CoinFlip_$73",
																						"typeString": "contract CoinFlip"
																					}
																				],
																				"id": 63,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "584:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 62,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "584:7:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 65,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "584:13:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 66,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "584:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 59,
																		"name": "player1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3,
																		"src": "567:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"id": 61,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"src": "567:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 67,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "567:39:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 68,
															"nodeType": "ExpressionStatement",
															"src": "567:39:0"
														}
													]
												},
												"id": 70,
												"nodeType": "IfStatement",
												"src": "442:176:0",
												"trueBody": {
													"id": 58,
													"nodeType": "Block",
													"src": "468:78:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 53,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "520:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_CoinFlip_$73",
																						"typeString": "contract CoinFlip"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_CoinFlip_$73",
																						"typeString": "contract CoinFlip"
																					}
																				],
																				"id": 52,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "512:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 51,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "512:7:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 54,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "512:13:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 55,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "512:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"expression": {
																					"id": 47,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "491:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 48,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "491:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 46,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "483:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_payable_$",
																				"typeString": "type(address payable)"
																			},
																			"typeName": {
																				"id": 45,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "483:8:0",
																				"stateMutability": "payable",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 49,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "483:19:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"id": 50,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"src": "483:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 56,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "483:51:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 57,
															"nodeType": "ExpressionStatement",
															"src": "483:51:0"
														}
													]
												}
											}
										]
									},
									"functionSelector": "de32e357",
									"id": 72,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "TakeBet",
									"nameLocation": "351:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "choice",
												"nameLocation": "364:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "359:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 31,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "359:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "358:13:0"
									},
									"returnParameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "387:0:0"
									},
									"scope": 73,
									"src": "342:283:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 74,
							"src": "62:566:0",
							"usedErrors": []
						}
					],
					"src": "35:593:0"
				},
				"id": 0
			}
		}
	}
}